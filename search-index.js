var searchIndex={};
searchIndex["paperclip"] = {"doc":"Paperclip is a OpenAPI code generator for efficient…","i":[[23,"api_v2_schema","paperclip","Converts your struct to support deserializing from an…",null,null],[4,"PaperClipError","","Global error which encapsulates all related errors.",null,null],[13,"Validation","","Error encountered during spec validation.",0,null],[13,"InvalidCodegenDirectory","","The given directory cannot be used for generating code.",0,null],[13,"UnsupportedOpenAPIVersion","","Currently, we only support OpenAPI v2, and eventually v3.",0,null],[13,"RelativePathNotUnique","","Paths listed in the spec must be unique.",0,null],[13,"MissingParametersInPath","","",0,null],[13,"InvalidHost","","Invalid host for URL.",0,null],[13,"InvalidBasePathURL","","Invalid base path URL.",0,null],[13,"MissingArrayItem","","The given schema object is an array, but the `items` field…",0,null],[13,"InvalidDefinitionName","","The name for the given definition is missing or invalid.",0,null],[13,"InvalidDefinitionPath","","A valid path cannot be obtained for the given definition.",0,null],[13,"Io","","I/O errors.",0,null],[13,"Json","","JSON coding errors.",0,null],[13,"Yaml","","YAML coding errors.",0,null],[13,"Templating","","Errors in templating.",0,null],[0,"v2","","Utilities related to the OpenAPI v2 specification.",null,null],[0,"im","paperclip::v2","Interior mutability stuff.",null,null],[3,"RcRefCell","paperclip::v2::im","Wrapper over `Rc<RefCell<T>>` to offer deserialization…",null,null],[3,"ArcRwLock","","Wrapper over `Arc<RwLock<T>>` to offer deserialization…",null,null],[0,"models","paperclip::v2","Models used by OpenAPI v2.",null,null],[4,"Version","paperclip::v2::models","OpenAPI version.",null,null],[13,"V2","","",1,null],[4,"DataType","","Supported data types.",null,null],[13,"Integer","","",2,null],[13,"Number","","",2,null],[13,"String","","",2,null],[13,"Boolean","","",2,null],[13,"Array","","",2,null],[13,"Object","","",2,null],[13,"File","","",2,null],[4,"DataTypeFormat","","Supported data type formats.",null,null],[13,"Int32","","",3,null],[13,"Int64","","",3,null],[13,"Float","","",3,null],[13,"Double","","",3,null],[13,"Byte","","",3,null],[13,"Binary","","",3,null],[13,"Date","","",3,null],[13,"DateTime","","",3,null],[13,"Password","","",3,null],[13,"Uuid","","",3,null],[13,"Other","","",3,null],[6,"ResolvableApi","","OpenAPI v2 spec which can be traversed and resolved for…",null,null],[6,"DefaultApiRaw","","OpenAPI v2 spec with defaults.",null,null],[3,"Api","","OpenAPI v2 (swagger) spec generic over parameter and schema.",null,null],[12,"swagger","","",4,null],[12,"definitions","","",4,null],[12,"paths","","",4,null],[12,"host","","",4,null],[12,"base_path","","",4,null],[12,"consumes","","",4,null],[12,"produces","","",4,null],[12,"schemes","","",4,null],[12,"parameters","","",4,null],[12,"responses","","",4,null],[12,"security_definitions","","",4,null],[12,"security","","",4,null],[12,"tags","","",4,null],[12,"external_docs","","",4,null],[12,"coders","","",4,null],[12,"support_crates","","Additional crates that need to be added to the manifest.",4,null],[12,"spec_format","","This field is set manually, because we don't know the…",4,null],[12,"info","","",4,null],[4,"SpecFormat","","The format used by spec (JSON/YAML).",null,null],[13,"Json","","",5,null],[13,"Yaml","","",5,null],[3,"DefaultSchemaRaw","","Raw version of schema.",null,null],[12,"reference","","",6,null],[12,"title","","",6,null],[12,"description","","",6,null],[12,"data_type","","",6,null],[12,"format","","",6,null],[12,"properties","","",6,null],[12,"items","","",6,null],[12,"enum_","","",6,null],[12,"extra_props","","",6,null],[12,"required","","",6,null],[3,"DefaultSchema","","Default schema if your schema doesn't have any custom…",null,null],[12,"reference","","",7,null],[12,"title","","",7,null],[12,"description","","",7,null],[12,"data_type","","",7,null],[12,"format","","",7,null],[12,"properties","","",7,null],[12,"items","","",7,null],[12,"enum_","","",7,null],[12,"extra_props","","",7,null],[12,"required","","",7,null],[3,"Info","","Info object.",null,null],[12,"version","","",8,null],[12,"title","","",8,null],[12,"description","","",8,null],[12,"contact","","",8,null],[12,"license","","",8,null],[3,"Contact","","Contact object.",null,null],[12,"name","","",9,null],[12,"url","","",9,null],[12,"email","","",9,null],[3,"License","","License object.",null,null],[12,"name","","",10,null],[12,"url","","",10,null],[3,"SecurityScheme","","Security Scheme object.",null,null],[12,"name","","",11,null],[12,"type_","","",11,null],[12,"in_","","",11,null],[12,"flow","","",11,null],[12,"auth_url","","",11,null],[12,"token_url","","",11,null],[12,"scopes","","",11,null],[12,"description","","",11,null],[3,"Tag","","Tag object.",null,null],[12,"name","","",12,null],[12,"description","","",12,null],[12,"external_docs","","",12,null],[3,"ExternalDocs","","External Documentation object.",null,null],[12,"description","","",13,null],[12,"url","","",13,null],[6,"ResolvablePathItem","","Path item that can be traversed and resolved for codegen.",null,null],[6,"DefaultPathItemRaw","","Path item with default parameter and response.",null,null],[3,"PathItem","","Path item object.",null,null],[12,"methods","","",14,null],[12,"parameters","","",14,null],[6,"ResolvableParameter","","Parameter that can be traversed and resolved for codegen.",null,null],[6,"DefaultParameterRaw","","Parameter with the default raw schema.",null,null],[3,"Parameter","","Request parameter object.",null,null],[12,"description","","",15,null],[12,"in_","","",15,null],[12,"name","","",15,null],[12,"required","","",15,null],[12,"schema","","",15,null],[12,"data_type","","",15,null],[12,"format","","",15,null],[12,"items","","",15,null],[12,"collection_format","","",15,null],[12,"allow_empty_value","","",15,null],[12,"default","","",15,null],[12,"maximum","","",15,null],[12,"exclusive_maximum","","",15,null],[12,"minimum","","",15,null],[12,"exclusive_minimum","","",15,null],[12,"max_length","","",15,null],[12,"min_length","","",15,null],[12,"pattern","","",15,null],[12,"max_items","","",15,null],[12,"min_items","","",15,null],[12,"unique_items","","",15,null],[12,"multiple_of","","",15,null],[12,"enum_","","",15,null],[3,"Items","","Items object.",null,null],[12,"data_type","","",16,null],[12,"format","","",16,null],[12,"items","","",16,null],[12,"collection_format","","",16,null],[12,"enum_","","",16,null],[12,"maximum","","",16,null],[12,"exclusive_maximum","","",16,null],[12,"minimum","","",16,null],[12,"exclusive_minimum","","",16,null],[12,"max_length","","",16,null],[12,"min_length","","",16,null],[12,"pattern","","",16,null],[12,"max_items","","",16,null],[12,"min_items","","",16,null],[12,"unique_items","","",16,null],[12,"multiple_of","","",16,null],[4,"ParameterIn","","The location of the parameter.",null,null],[13,"Query","","",17,null],[13,"Header","","",17,null],[13,"Path","","",17,null],[13,"FormData","","",17,null],[13,"Body","","",17,null],[4,"CollectionFormat","","Possible formats for array values in parameter.",null,null],[13,"Csv","","",18,null],[13,"Ssv","","",18,null],[13,"Tsv","","",18,null],[13,"Pipes","","",18,null],[13,"Multi","","",18,null],[6,"ResolvableOperation","","Operation that can be traversed and resolved for codegen.",null,null],[6,"DefaultOperationRaw","","Operation with default raw parameter and response.",null,null],[3,"Operation","","Operation object.",null,null],[12,"operation_id","","",19,null],[12,"description","","",19,null],[12,"consumes","","",19,null],[12,"produces","","",19,null],[12,"security","","",19,null],[12,"schemes","","",19,null],[12,"responses","","",19,null],[12,"parameters","","",19,null],[12,"deprecated","","",19,null],[3,"Reference","","Reference object.",null,null],[12,"reference","","",20,null],[4,"OperationProtocol","","The protocol used for an operation.",null,null],[13,"Http","","",21,null],[13,"Https","","",21,null],[13,"Ws","","",21,null],[13,"Wss","","",21,null],[6,"ResolvableResponse","","Response that can be traversed and resolved for codegen.",null,null],[6,"DefaultResponseRaw","","Response with the default raw schema.",null,null],[3,"Response","","Response object.",null,null],[12,"description","","",22,null],[12,"schema","","",22,null],[12,"headers","","",22,null],[3,"Header","","Header object.",null,null],[12,"description","","",23,null],[12,"data_type","","",23,null],[12,"format","","",23,null],[12,"items","","",23,null],[12,"collection_format","","",23,null],[12,"default","","",23,null],[12,"enum_","","",23,null],[12,"maximum","","",23,null],[12,"exclusive_maximum","","",23,null],[12,"minimum","","",23,null],[12,"exclusive_minimum","","",23,null],[12,"max_length","","",23,null],[12,"min_length","","",23,null],[12,"pattern","","",23,null],[12,"max_items","","",23,null],[12,"min_items","","",23,null],[12,"unique_items","","",23,null],[12,"multiple_of","","",23,null],[4,"HttpMethod","","The HTTP method used for an operation.",null,null],[13,"Get","","",24,null],[13,"Put","","",24,null],[13,"Post","","",24,null],[13,"Delete","","",24,null],[13,"Options","","",24,null],[13,"Head","","",24,null],[13,"Patch","","",24,null],[4,"Either","","`Either` from \"either\" crate. We can't use that crate…",null,null],[13,"Left","","",25,null],[13,"Right","","",25,null],[4,"Resolvable","","Wrapper for schema. This uses `Arc<RwLock<S>>` for…",null,null],[13,"Raw","","",26,null],[13,"Resolved","","",26,null],[12,"new","paperclip::v2::models::Resolvable","",27,null],[12,"old","","",27,null],[3,"Coder","paperclip::v2::models","Represents the en/decoder for some MIME media range.",null,null],[12,"encoder_path","","Path to the encoding function.",28,null],[12,"decoder_path","","Path to the decoding function.",28,null],[12,"error_path","","Path to the error type.",28,null],[12,"any_value","","Path to the struct/enum that represents `Any` (such as…",28,null],[12,"prefer","","Whether this media type should be preferred when multiple…",28,null],[12,"builtin","","Whether this en/decoder is built-in.",28,null],[3,"Coders","","`x-coder` global extension for custom encoders and decoders.",null,null],[3,"MediaRange","","Wrapper for `mime::MediaRange` to support `BTree{Set, Map}`.",null,null],[12,"0","","",29,null],[3,"JSON_CODER","","Default coder for JSON.",null,null],[3,"JSON_MIME","","Media range for JSON.",null,null],[3,"YAML_CODER","","Default coder for YAML.",null,null],[3,"YAML_MIME","","Media range for YAML.",null,null],[3,"DefaultSchema","paperclip::v2","Default schema if your schema doesn't have any custom…",null,null],[12,"reference","","",7,null],[12,"title","","",7,null],[12,"description","","",7,null],[12,"data_type","","",7,null],[12,"format","","",7,null],[12,"properties","","",7,null],[12,"items","","",7,null],[12,"enum_","","",7,null],[12,"extra_props","","",7,null],[12,"required","","",7,null],[6,"ResolvableApi","","OpenAPI v2 spec which can be traversed and resolved for…",null,null],[0,"schema","","Traits used for code and spec generation.",null,null],[8,"Schema","paperclip::v2::schema","Interface for the `Schema` object.",null,null],[10,"description","","Description for this schema, if any (`description` field).",30,[[["self"]],[["str"],["option",["str"]]]]],[10,"reference","","Reference to some other schema, if any (`$ref` field).",30,[[["self"]],[["str"],["option",["str"]]]]],[10,"data_type","","Data type of this schema, if any (`type` field).",30,[[["self"]],[["option",["datatype"]],["datatype"]]]],[10,"format","","Data type format used by this schema, if any (`format`…",30,[[["self"]],[["datatypeformat"],["option",["datatypeformat"]]]]],[10,"items","","Schema for array definitions, if any (`items` field).",30,[[["self"]],[["option",["resolvable"]],["resolvable"]]]],[10,"items_mut","","Mutable access to the `items` field, if it exists.",30,[[["self"]],[["option",["resolvable"]],["resolvable"]]]],[10,"additional_properties","","Value schema for maps (`additional_properties` field).",30,[[["self"]],[["option",["either"]],["either"]]]],[10,"additional_properties_mut","","Mutable access to `additional_properties` field, if it's a…",30,[[["self"]],[["option",["either"]],["either"]]]],[10,"properties","","Map of names and schema for properties, if it's an object…",30,[[["self"]],[["option",["btreemap"]],["btreemap"]]]],[10,"properties_mut","","Mutable access to `properties` field.",30,[[["self"]],[["btreemap"],["option",["btreemap"]]]]],[10,"required_properties","","Returns the required properties (if any) for this object.",30,[[["self"]],[["option",["btreeset"]],["btreeset"]]]],[10,"enum_variants","","Enum variants in this schema (if any). It's…",30,[[["self"]],["option"]]],[11,"contains_any","","Returns whether this definition \"is\" or \"has\" `Any` type.",30,[[["self"]],["bool"]]],[10,"set_reference","","Set the reference to this schema.",30,[[["self"],["string"]]]],[10,"set_cyclic","","Set whether this definition is cyclic. This is done by the…",30,[[["self"],["bool"]]]],[10,"is_cyclic","","Returns whether this definition is cyclic.",30,[[["self"]],["bool"]]],[10,"name","","Name of this schema, if any.",30,[[["self"]],[["str"],["option",["str"]]]]],[10,"set_name","","Sets the name for this schema. This is done by the resolver.",30,[[["str"],["self"]]]],[8,"TypedData","","Trait for returning OpenAPI data type and format for the…",null,null],[11,"data_type","","The OpenAPI type for this implementor.",31,[[],["datatype"]]],[11,"format","","The optional OpenAPI data format for this implementor.",31,[[],[["datatypeformat"],["option",["datatypeformat"]]]]],[8,"Apiv2Schema","","Represents a OpenAPI v2 schema object convertible. This is…",null,null],[18,"NAME","","Name of this schema. This is the name to which the…",32,null],[18,"DESCRIPTION","","Description of this schema. In case the trait is derived,…",32,null],[11,"raw_schema","","Returns the raw schema for this object.",32,[[],["defaultschemaraw"]]],[11,"schema_with_ref","","Returns the schema with a reference (if this is an object).",32,[[],["defaultschemaraw"]]],[11,"security_scheme","","Returns the security scheme for this object.",32,[[],[["securityscheme"],["option",["securityscheme"]]]]],[8,"Apiv2Operation","","Represents a OpenAPI v2 operation convertible. This is…",null,null],[10,"operation","","Returns the definition for this operation.",33,[[],[["operation",["parameter","response"]],["parameter",["defaultschemaraw"]],["response",["defaultschemaraw"]]]]],[10,"security_definitions","","Returns a map of security definitions that will be merged…",33,[[],[["securityscheme"],["btreemap",["string","securityscheme"]],["string"]]]],[10,"definitions","","Returns the definitions used by this operation.",33,[[],[["btreemap",["string","defaultschemaraw"]],["string"],["defaultschemaraw"]]]],[8,"Apiv2Errors","","Represents a OpenAPI v2 error convertible. This is…",null,null],[18,"ERROR_MAP","","",34,null],[8,"Schema","paperclip::v2","Interface for the `Schema` object.",null,null],[10,"description","","Description for this schema, if any (`description` field).",30,[[["self"]],[["str"],["option",["str"]]]]],[10,"reference","","Reference to some other schema, if any (`$ref` field).",30,[[["self"]],[["str"],["option",["str"]]]]],[10,"data_type","","Data type of this schema, if any (`type` field).",30,[[["self"]],[["option",["datatype"]],["datatype"]]]],[10,"format","","Data type format used by this schema, if any (`format`…",30,[[["self"]],[["datatypeformat"],["option",["datatypeformat"]]]]],[10,"items","","Schema for array definitions, if any (`items` field).",30,[[["self"]],[["option",["resolvable"]],["resolvable"]]]],[10,"items_mut","","Mutable access to the `items` field, if it exists.",30,[[["self"]],[["option",["resolvable"]],["resolvable"]]]],[10,"additional_properties","","Value schema for maps (`additional_properties` field).",30,[[["self"]],[["option",["either"]],["either"]]]],[10,"additional_properties_mut","","Mutable access to `additional_properties` field, if it's a…",30,[[["self"]],[["option",["either"]],["either"]]]],[10,"properties","","Map of names and schema for properties, if it's an object…",30,[[["self"]],[["option",["btreemap"]],["btreemap"]]]],[10,"properties_mut","","Mutable access to `properties` field.",30,[[["self"]],[["btreemap"],["option",["btreemap"]]]]],[10,"required_properties","","Returns the required properties (if any) for this object.",30,[[["self"]],[["option",["btreeset"]],["btreeset"]]]],[10,"enum_variants","","Enum variants in this schema (if any). It's…",30,[[["self"]],["option"]]],[11,"contains_any","","Returns whether this definition \"is\" or \"has\" `Any` type.",30,[[["self"]],["bool"]]],[10,"set_reference","","Set the reference to this schema.",30,[[["self"],["string"]]]],[10,"set_cyclic","","Set whether this definition is cyclic. This is done by the…",30,[[["self"],["bool"]]]],[10,"is_cyclic","","Returns whether this definition is cyclic.",30,[[["self"]],["bool"]]],[10,"name","","Name of this schema, if any.",30,[[["self"]],[["str"],["option",["str"]]]]],[10,"set_name","","Sets the name for this schema. This is done by the resolver.",30,[[["str"],["self"]]]],[3,"EmitterState","","Holds the state for your schema emitter.",null,null],[12,"working_dir","","Working directory - the path in which the necessary…",35,null],[12,"ns_sep","","Namespace separation string.",35,null],[12,"mod_prefix","","Module prefix for using in generated code.",35,null],[5,"from_reader","","Deserialize the schema from the given reader. Currently,…",null,[[["r"]],[["papercliperror"],["result",["resolvableapi","papercliperror"]],["resolvableapi"]]]],[0,"codegen","","Code generation for OpenAPI v2.",null,null],[3,"EmitterState","paperclip::v2::codegen","Holds the state for your schema emitter.",null,null],[12,"working_dir","","Working directory - the path in which the necessary…",35,null],[12,"ns_sep","","Namespace separation string.",35,null],[12,"mod_prefix","","Module prefix for using in generated code.",35,null],[3,"DefaultEmitter","","Default emitter for anything that implements `Schema` trait.",null,null],[3,"CrateMeta","","Metadata for generating a crate.",null,null],[12,"name","","Name of the crate. If this is not specified, then the name…",36,null],[12,"version","","Version (defaults to 0.1.0)",36,null],[12,"authors","","List of authors for this crate. Defaults to cargo's…",36,null],[12,"mode","","Whether we're planning to emit a lib, app or module.",36,null],[4,"EmittedUnit","","Some \"thing\" emitted by the emitter.",null,null],[13,"Known","","Some Rust type.",37,null],[13,"Objects","","Bunch of emitted Rust objects.",37,null],[13,"KnownButAnonymous","","We've identified the Rust type, but then we also have a…",37,null],[13,"None","","Nothing to do.",37,null],[4,"EmitMode","","Mode of codegen (module, crate or CLI app).",null,null],[13,"Module","","",38,null],[13,"Crate","","",38,null],[13,"App","","",38,null],[0,"object","","Simplified objects for codegen.",null,null],[3,"ApiObjectBuilderImpl","paperclip::v2::codegen::object","Represents the API object builder impl.",null,null],[3,"ApiObjectImpl","","Represents the API object impl.",null,null],[3,"ApiObject","","Represents a (simplified) Rust struct or enum.",null,null],[12,"name","","Name of the struct (camel-cased).",39,null],[12,"description","","Description for this object (if any), to be used for docs.",39,null],[12,"path","","Path to this object from (generated) root module.",39,null],[12,"inner","","Fields/variants based on whether this is a struct/enum.",39,null],[12,"paths","","Paths with operations which address this object.",39,null],[3,"PathOps","","Operations in a path.",null,null],[12,"req","","Operations for this object and their associated…",40,null],[12,"params","","Parameters required for all operations in this path.",40,null],[3,"OpRequirement","","Requirement for an object corresponding to some operation.",null,null],[12,"id","","Operation ID (if it's provided in the schema).",41,null],[12,"description","","Description of this operation (if any), to be used for docs.",41,null],[12,"deprecated","","Whether the operation is deprecated or not.",41,null],[12,"params","","Parameters required for this operation.",41,null],[12,"body_required","","Whether the object itself is required (in body) for this…",41,null],[12,"listable","","Whether this operation returns a list of the associated…",41,null],[12,"response","","Response information for this operation.",41,null],[12,"encoding","","Preferred media range and encoder for the client. This is…",41,null],[12,"decoding","","Preferred media range and decoder for the client. This is…",41,null],[3,"Response","","",null,null],[12,"ty_path","","Type path for this operation's response (if any). If this…",42,null],[12,"contains_any","","Whether the response contains an `Any`. This is useful…",42,null],[12,"headers","","Custom response headers for this operation (if any).",42,null],[3,"Parameter","","Represents some parameter somewhere (header, path, query,…",null,null],[12,"name","","Name of the parameter.",43,null],[12,"description","","Description of this operation (if any), to be used for docs.",43,null],[12,"ty_path","","Type of the parameter as a path.",43,null],[12,"required","","Whether this parameter is required.",43,null],[12,"presence","","Where the parameter lives.",43,null],[12,"delimiting","","If the parameter is an array of values, then the format…",43,null],[3,"ObjectVariant","","Represents an enum variant.",null,null],[12,"name","","Name of the variant (case unspecified).",44,null],[12,"value","","Value of this variant (if any). Note that this is only…",44,null],[3,"ObjectField","","Represents a struct field.",null,null],[12,"name","","Name of the field.",45,null],[12,"ty_path","","Type of the field as a path.",45,null],[12,"description","","Description of this operation (if any), to be used for docs.",45,null],[12,"is_required","","Whether this field is required (i.e., not optional).",45,null],[12,"needs_any","","Whether this field's type \"is\" or \"has\" an `Any` type.",45,null],[12,"boxed","","Whether this field should be boxed.",45,null],[12,"child_req_fields","","Required fields of the \"deepest\" child type in the given…",45,null],[4,"ObjectContainer","","Container for the struct/enum containing fields/variants.",null,null],[13,"Enum","","",46,null],[12,"variants","paperclip::v2::codegen::object::ObjectContainer","Variants if it's an enum.",47,null],[12,"is_string","","Flag to represent whether this enum is a string. When…",47,null],[13,"Struct","paperclip::v2::codegen::object","",46,null],[12,"fields","paperclip::v2::codegen::object::ObjectContainer","Fields if it's a struct.",48,null],[11,"fields_mut","paperclip::v2::codegen::object","Get a mutable reference to the struct fields. Panics if…",39,[[["self"]],["vec"]]],[11,"fields","","Get a reference to the struct fields. Panics if this is…",39,[[["self"]]]],[11,"variants_mut","","Get a mutable reference to the enum variants. Panics if…",39,[[["self"]],["vec"]]],[11,"variants","","Get a reference to the enum variants. Panics if this is…",39,[[["self"]]]],[11,"is_enum","","Returns whether this object is an enum.",46,[[["self"]],["bool"]]],[11,"is_string_enum","","Returns whether this enum is to represent a string.",46,[[["self"]],["bool"]]],[11,"is_file","","Returns whether this response is a file.",42,[[["self"]],["bool"]]],[11,"with_name","","Create an object with the given name.",39,[[["s"]],["self"]]],[11,"set_url","paperclip::v2","Sets the base URL for this session.",35,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"base_url","","Base URL for this API.",35,[[["self"]],["string"]]],[11,"set_meta","","Sets the crate metadata for this session.",35,[[["self"],["cratemeta"]]]],[8,"Emitter","paperclip::v2::codegen","`Emitter` represents the interface for generating the…",null,null],[16,"Definition","","The associated `Schema` implementor.",49,null],[10,"state","","Returns a reference to the underlying state.",49,[[["self"]],["emitterstate"]]],[11,"def_ns_name","","Returns an iterator of path components for the given…",49,[[["self"]],[["error"],["result",["box","error"]],["box",["iterator"]]]]],[11,"def_name","","Returns the CamelCase name for the given definition.",49,[[["self"]],[["result",["string","error"]],["error"],["string"]]]],[11,"def_anon_name","","Returns the CamelCase name for some definition based on…",49,[[["self"]],[["option",["string"]],["string"]]]],[11,"enum_variant","","Returns the enum variant of a possible value in the given…",49,[[["value"],["self"]],[["option",["objectvariant"]],["objectvariant"]]]],[11,"def_mod_path","","Returns the module path (from working directory) for the…",49,[[["self"]],[["result",["pathbuf","error"]],["pathbuf"],["error"]]]],[11,"unknown_op_mod_path","","Called whenever we encounter an operation that can't be…",49,[[["str"],["resolvableoperation"],["self"],["httpmethod"]],[["result",["pathbuf","error"]],["pathbuf"],["error"]]]],[11,"unknown_op_object","","Called whenever we don't have an object for the module…",49,[[["str"],["resolvableoperation"],["self"],["httpmethod"]],[["result",["apiobject","error"]],["error"],["apiobject"]]]],[11,"generate","","Entrypoint for emitter. Given an API spec, generate code…",49,[[["resolvableapi"],["self"]],[["result",["error"]],["error"]]]],[11,"build_def","","Builds a schema. This resolves type aliases to known types…",49,[[["self"],["definitioncontext"]],[["emittedunit"],["result",["emittedunit","error"]],["error"]]]],[8,"Emitter","paperclip::v2","`Emitter` represents the interface for generating the…",null,null],[16,"Definition","","The associated `Schema` implementor.",49,null],[10,"state","","Returns a reference to the underlying state.",49,[[["self"]],["emitterstate"]]],[11,"def_ns_name","paperclip::v2::codegen","Returns an iterator of path components for the given…",49,[[["self"]],[["error"],["result",["box","error"]],["box",["iterator"]]]]],[11,"def_name","","Returns the CamelCase name for the given definition.",49,[[["self"]],[["result",["string","error"]],["error"],["string"]]]],[11,"def_anon_name","","Returns the CamelCase name for some definition based on…",49,[[["self"]],[["option",["string"]],["string"]]]],[11,"enum_variant","","Returns the enum variant of a possible value in the given…",49,[[["value"],["self"]],[["option",["objectvariant"]],["objectvariant"]]]],[11,"def_mod_path","","Returns the module path (from working directory) for the…",49,[[["self"]],[["result",["pathbuf","error"]],["pathbuf"],["error"]]]],[11,"unknown_op_mod_path","","Called whenever we encounter an operation that can't be…",49,[[["str"],["resolvableoperation"],["self"],["httpmethod"]],[["result",["pathbuf","error"]],["pathbuf"],["error"]]]],[11,"unknown_op_object","","Called whenever we don't have an object for the module…",49,[[["str"],["resolvableoperation"],["self"],["httpmethod"]],[["result",["apiobject","error"]],["error"],["apiobject"]]]],[11,"generate","","Entrypoint for emitter. Given an API spec, generate code…",49,[[["resolvableapi"],["self"]],[["result",["error"]],["error"]]]],[11,"build_def","","Builds a schema. This resolves type aliases to known types…",49,[[["self"],["definitioncontext"]],[["emittedunit"],["result",["emittedunit","error"]],["error"]]]],[0,"actix","paperclip","Plugin types, traits and macros for actix-web framework.",null,null],[23,"api_v2_errors","paperclip::actix","Marker attribute for indicating that the marked object can…",null,null],[23,"api_v2_operation","","Marker attribute for indicating that a function is an…",null,null],[24,"Apiv2Schema","","Derive attribute for indicating that a type is an OpenAPI…",null,null],[24,"Apiv2Security","","Marker attribute for indicating that an object forbids…",null,null],[0,"web","","Proxy module for `actix_web::web`.",null,null],[3,"Resource","paperclip::actix::web","Wrapper for `actix_web::Resource`",null,null],[5,"resource","","Wrapper for `actix_web::web::resource`.",null,[[["str"]],[["resource",["resourceendpoint"]],["resource",["resource"]]]]],[3,"Scope","","Wrapper for `actix_web::Scope`",null,null],[5,"scope","","Wrapper for `actix_web::web::scope`.",null,[[["str"]],[["scope",["scope"]],["scope",["scopeendpoint"]]]]],[3,"Route","","Wrapper for `actix_web::Route`",null,null],[5,"method","","Wrapper for `actix_web::web::method`.",null,[[["method"]],["route"]]],[5,"get","","Wrapper for `actix_web::web::get`.",null,[[],["route"]]],[5,"put","","Wrapper for `actix_web::web::put`.",null,[[],["route"]]],[5,"post","","Wrapper for `actix_web::web::post`.",null,[[],["route"]]],[5,"patch","","Wrapper for `actix_web::web::patch`.",null,[[],["route"]]],[5,"delete","","Wrapper for `actix_web::web::delete`.",null,[[],["route"]]],[5,"options","","Wrapper for `actix_web::web::options`.",null,[[],["route"]]],[5,"head","","Wrapper for `actix_web::web::head`.",null,[[],["route"]]],[3,"ServiceConfig","","Wrapper for `actix_web::web::ServiceConfig`.",null,null],[5,"block","","Execute blocking function on a thread pool, returns future…",null,[[["f"]]]],[5,"service","","Create raw service for a specific path.",null,[[["t"]],["webservice"]]],[5,"to","","Create a new route and add handler.",null,[[["f"]],["route"]]],[3,"Bytes","","A reference counted contiguous slice of memory.",null,null],[3,"BytesMut","","A unique reference to a contiguous slice of memory.",null,null],[3,"Data","","Application data.",null,null],[3,"Form","","Form data helper (`application/x-www-form-urlencoded`)",null,null],[12,"0","","",50,null],[3,"FormConfig","","Form extractor configuration",null,null],[3,"HttpRequest","","An HTTP Request",null,null],[3,"HttpResponse","","An HTTP Response",null,null],[3,"Json","","Json helper",null,null],[12,"0","","",51,null],[3,"JsonConfig","","Json extractor configuration",null,null],[3,"Path","","Extract typed information from the request's path.",null,null],[3,"PathConfig","","Path extractor configuration",null,null],[3,"Payload","","Payload extractor returns request 's payload stream.",null,null],[12,"0","","",52,null],[3,"PayloadConfig","","Payload configuration for request's payload.",null,null],[3,"Query","","Extract typed information from the request's query.",null,null],[12,"0","","",53,null],[3,"QueryConfig","","Query extractor configuration",null,null],[3,"App","paperclip::actix","Wrapper for `actix_web::App`.",null,null],[8,"Mountable","","Indicates that this thingmabob has a path and a bunch of…",null,null],[10,"path","","Where this thing gets mounted.",54,[[["self"]],["str"]]],[10,"operations","","Map of HTTP methods and the associated API operations.",54,[[["self"]],[["operation",["parameter","response"]],["btreemap",["httpmethod","operation"]],["httpmethod"]]]],[10,"definitions","","The definitions recorded by this object.",54,[[["self"]],[["btreemap",["string","defaultschemaraw"]],["string"],["defaultschemaraw"]]]],[10,"security_definitions","","The security definitions recorded by this object.",54,[[["self"]],[["securityscheme"],["btreemap",["string","securityscheme"]],["string"]]]],[11,"update_operations","","Updates the given map of operations with operations…",54,[[["self"],["btreemap"]]]],[8,"OpenApiExt","","Extension trait for actix-web applications.",null,null],[16,"Wrapper","","",55,null],[10,"wrap_api","","Consumes this app and produces its wrapper to start…",55,[[]]],[8,"OperationModifier","","Actix-specific trait for indicating that this entity can…",null,null],[11,"update_parameter","","Update the parameters list in the given operation (if…",56,[[["operation"]]]],[11,"update_response","","Update the responses map in the given operation (if needed).",56,[[["operation"]]]],[11,"update_definitions","","Update the definitions map (if needed).",56,[[["btreemap"]]]],[11,"update_security","","Update the security map in the given operation (if needed).",56,[[["operation"]]]],[11,"update_security_definitions","","Update the security defition map (if needed).",56,[[["btreemap"]]]],[3,"ResponderWrapper","","Wrapper for wrapping over `impl Responder` thingies (to…",null,null],[12,"0","","",57,null],[6,"PaperClipResult","paperclip","Generic result used throughout this library.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"as_fail","","",0,[[["self"]],["fail"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","paperclip::v2::im","",58,[[],["t"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"vzip","","",58,[[],["v"]]],[11,"from","","",59,[[],["t"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"vzip","","",59,[[],["v"]]],[11,"from","paperclip::v2::models","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"equivalent","","",1,[[["k"],["self"]],["bool"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"equivalent","","",2,[[["k"],["self"]],["bool"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"equivalent","","",3,[[["k"],["self"]],["bool"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"equivalent","","",5,[[["k"],["self"]],["bool"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","paperclip::v2","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","paperclip::v2::models","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"equivalent","","",17,[[["k"],["self"]],["bool"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"equivalent","","",18,[[["k"],["self"]],["bool"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"equivalent","","",21,[[["k"],["self"]],["bool"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"equivalent","","",24,[[["k"],["self"]],["bool"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"load","","",25,[[["self"]]]],[11,"load","","",25,[[["self"]],["dynguard"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[],["t"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"vzip","","",60,[[],["v"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"equivalent","","",29,[[["k"],["self"]],["bool"]]],[11,"vzip","","",29,[[],["v"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"vzip","","",61,[[],["v"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"vzip","","",62,[[],["v"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"vzip","","",63,[[],["v"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"vzip","","",64,[[],["v"]]],[11,"from","paperclip::v2","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"vzip","","",35,[[],["v"]]],[11,"from","paperclip::v2::codegen","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"vzip","","",65,[[],["v"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"vzip","","",36,[[],["v"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"vzip","","",37,[[],["v"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"equivalent","","",38,[[["k"],["self"]],["bool"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","paperclip::v2::codegen::object","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_string","","",66,[[["self"]],["string"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"vzip","","",66,[[],["v"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_string","","",67,[[["self"]],["string"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"vzip","","",67,[[],["v"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"vzip","","",45,[[],["v"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"vzip","","",46,[[],["v"]]],[11,"from","paperclip::actix::web","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"vzip","","",68,[[],["v"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"vzip","","",69,[[],["v"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"into_factory","","",70,[[],["t"]]],[11,"vzip","","",70,[[],["v"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"vzip","","",71,[[],["v"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"into_iter","","",72,[[],["i"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"raw_schema","","",72,[[],["defaultschemaraw"]]],[11,"equivalent","","",72,[[["k"],["self"]],["bool"]]],[11,"vzip","","",72,[[],["v"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"into_iter","","",73,[[],["i"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"equivalent","","",73,[[["k"],["self"]],["bool"]]],[11,"vzip","","",73,[[],["v"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"raw_schema","","",74,[[],["defaultschemaraw"]]],[11,"load","","",74,[[["self"]]]],[11,"load","","",74,[[["self"]],["dynguard"]]],[11,"vzip","","",74,[[],["v"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"raw_schema","","",50,[[],["defaultschemaraw"]]],[11,"equivalent","","",50,[[["k"],["self"]],["bool"]]],[11,"load","","",50,[[["self"]]]],[11,"load","","",50,[[["self"]],["dynguard"]]],[11,"vzip","","",50,[[],["v"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"vzip","","",75,[[],["v"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"raw_schema","","",76,[[],["defaultschemaraw"]]],[11,"vzip","","",76,[[],["v"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"raw_schema","","",77,[[],["defaultschemaraw"]]],[11,"try_poll","","",77,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",77,[[],["v"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"raw_schema","","",51,[[],["defaultschemaraw"]]],[11,"load","","",51,[[["self"]]]],[11,"load","","",51,[[["self"]],["dynguard"]]],[11,"vzip","","",51,[[],["v"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"vzip","","",78,[[],["v"]]],[11,"from","","",79,[[],["t"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_string","","",79,[[["self"]],["string"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"raw_schema","","",79,[[],["defaultschemaraw"]]],[11,"equivalent","","",79,[[["k"],["self"]],["bool"]]],[11,"load","","",79,[[["self"]]]],[11,"load","","",79,[[["self"]],["dynguard"]]],[11,"vzip","","",79,[[],["v"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"vzip","","",80,[[],["v"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"raw_schema","","",52,[[],["defaultschemaraw"]]],[11,"try_poll_next","","",52,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"vzip","","",52,[[],["v"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"vzip","","",81,[[],["v"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"raw_schema","","",53,[[],["defaultschemaraw"]]],[11,"equivalent","","",53,[[["k"],["self"]],["bool"]]],[11,"load","","",53,[[["self"]]]],[11,"load","","",53,[[["self"]],["dynguard"]]],[11,"vzip","","",53,[[],["v"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"vzip","","",82,[[],["v"]]],[11,"from","paperclip::actix","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"vzip","","",83,[[],["v"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"raw_schema","","",57,[[],["defaultschemaraw"]]],[11,"vzip","","",57,[[],["v"]]],[11,"from","paperclip::actix::web","",72,[[["custom"]],["bytes"]]],[11,"from","","",72,[[["bytestr"]],["bytes"]]],[11,"from_iter","","",73,[[["t"]],["bytesmut"]]],[11,"from_iter","","",72,[[["t"]],["bytes"]]],[11,"from_iter","","",73,[[["t"]],["bytesmut"]]],[11,"from","","",73,[[],["bytesmut"]]],[11,"from","","",72,[[["string"]],["bytes"]]],[11,"from","","",72,[[["bytesmut"]],["bytes"]]],[11,"from","","",72,[[],["bytes"]]],[11,"from","","",72,[[["vec",["u8"]],["u8"]],["bytes"]]],[11,"from","","",73,[[["str"]],["bytesmut"]]],[11,"from","","",72,[[["str"]],["bytes"]]],[11,"into_iter","","",72,[[]]],[11,"into_iter","","",73,[[]]],[11,"write_str","","",73,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"write_fmt","","",73,[[["self"],["arguments"]],[["result",["error"]],["error"]]]],[11,"clone","","",72,[[["self"]],["bytes"]]],[11,"clone","","",73,[[["self"]],["bytesmut"]]],[11,"fmt","","",72,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",73,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",72,[[["bytes"],["self"]],["ordering"]]],[11,"cmp","","",73,[[["self"],["bytesmut"]],["ordering"]]],[11,"remaining","","",73,[[["self"]],["usize"]]],[11,"bytes","","",73,[[["self"]]]],[11,"advance","","",73,[[["self"],["usize"]]]],[11,"to_bytes","","",73,[[["self"]],["bytes"]]],[11,"remaining","","",72,[[["self"]],["usize"]]],[11,"bytes","","",72,[[["self"]]]],[11,"advance","","",72,[[["self"],["usize"]]]],[11,"to_bytes","","",72,[[["self"]],["bytes"]]],[11,"deref_mut","","",73,[[["self"]]]],[11,"default","","",72,[[],["bytes"]]],[11,"default","","",73,[[],["bytesmut"]]],[11,"extend","","",73,[[["self"],["t"]]]],[11,"extend","","",73,[[["self"],["t"]]]],[11,"deref","","",73,[[["self"]]]],[11,"deref","","",72,[[["self"]]]],[11,"as_ref","","",73,[[["self"]]]],[11,"as_ref","","",72,[[["self"]]]],[11,"as_mut","","",73,[[["self"]]]],[11,"remaining_mut","","",73,[[["self"]],["usize"]]],[11,"advance_mut","","",73,[[["self"],["usize"]]]],[11,"bytes_mut","","",73,[[["self"]]]],[11,"put","","",73,[[["self"],["t"]]]],[11,"put_slice","","",73,[[["self"]]]],[11,"eq","","",72,[[["self"],["vec"]],["bool"]]],[11,"eq","","",73,[[["t"],["self"]],["bool"]]],[11,"eq","","",73,[[["self"]],["bool"]]],[11,"eq","","",73,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",72,[[["bytes"],["self"]],["bool"]]],[11,"eq","","",73,[[["self"],["vec"]],["bool"]]],[11,"eq","","",73,[[["self"],["string"]],["bool"]]],[11,"eq","","",72,[[["t"],["self"]],["bool"]]],[11,"eq","","",73,[[["bytes"],["self"]],["bool"]]],[11,"eq","","",72,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",72,[[["str"],["self"]],["bool"]]],[11,"eq","","",72,[[["self"]],["bool"]]],[11,"eq","","",72,[[["self"],["string"]],["bool"]]],[11,"eq","","",73,[[["str"],["self"]],["bool"]]],[11,"drop","","",73,[[["self"]]]],[11,"drop","","",72,[[["self"]]]],[11,"hash","","",72,[[["self"],["h"]]]],[11,"hash","","",73,[[["self"],["h"]]]],[11,"fmt","","",72,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",73,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"partial_cmp","","",73,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",73,[[["self"],["bytesmut"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",72,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",73,[[["self"],["vec"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",72,[[["self"],["string"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",73,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",73,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",72,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",72,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",73,[[["self"],["string"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",72,[[["bytes"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",72,[[["self"],["vec"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",72,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",73,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"borrow","","",72,[[["self"]]]],[11,"borrow","","",73,[[["self"]]]],[11,"borrow_mut","","",73,[[["self"]]]],[11,"deserialize","paperclip::v2::models","",10,[[["__d"]],[["result",["license"]],["license"]]]],[11,"deserialize","","",16,[[["__d"]],[["result",["items"]],["items"]]]],[11,"deserialize","","",3,[[["__d"]],[["datatypeformat"],["result",["datatypeformat"]]]]],[11,"deserialize","","",17,[[["__d"]],[["result",["parameterin"]],["parameterin"]]]],[11,"deserialize","","",12,[[["__d"]],[["tag"],["result",["tag"]]]]],[11,"deserialize","","",11,[[["__d"]],[["securityscheme"],["result",["securityscheme"]]]]],[11,"deserialize","","",2,[[["__d"]],[["datatype"],["result",["datatype"]]]]],[11,"deserialize","","",28,[[["__d"]],[["result",["coder"]],["coder"]]]],[11,"deserialize","","",4,[[["__d"]],[["api"],["result",["api"]]]]],[11,"deserialize","","",19,[[["__d"]],[["result",["operation"]],["operation"]]]],[11,"deserialize","","",25,[[["__d"]],[["result",["either"]],["either"]]]],[11,"deserialize","","",1,[[["__d"]],[["result",["version"]],["version"]]]],[11,"deserialize","","",24,[[["__d"]],[["httpmethod"],["result",["httpmethod"]]]]],[11,"deserialize","","",15,[[["__d"]],[["result",["parameter"]],["parameter"]]]],[11,"deserialize","","",22,[[["__d"]],[["result",["response"]],["response"]]]],[11,"deserialize","","",20,[[["__d"]],[["result",["reference"]],["reference"]]]],[11,"deserialize","paperclip::v2::im","",58,[[["d"]],[["rcrefcell"],["result",["rcrefcell"]]]]],[11,"deserialize","paperclip::v2::models","",18,[[["__d"]],[["collectionformat"],["result",["collectionformat"]]]]],[11,"deserialize","","",21,[[["__d"]],[["operationprotocol"],["result",["operationprotocol"]]]]],[11,"deserialize","","",14,[[["__d"]],[["result",["pathitem"]],["pathitem"]]]],[11,"deserialize","","",23,[[["__d"]],[["result",["header"]],["header"]]]],[11,"deserialize","paperclip::v2::im","",59,[[["d"]],[["result",["arcrwlock"]],["arcrwlock"]]]],[11,"deserialize","paperclip::v2::models","",13,[[["__d"]],[["externaldocs"],["result",["externaldocs"]]]]],[11,"deserialize","paperclip::v2","",7,[[["__d"]],[["result",["defaultschema"]],["defaultschema"]]]],[11,"deserialize","paperclip::v2::models","",8,[[["__d"]],[["result",["info"]],["info"]]]],[11,"deserialize","","",9,[[["__d"]],[["contact"],["result",["contact"]]]]],[11,"deserialize","","",29,[[["d"]],[["mediarange"],["result",["mediarange"]]]]],[11,"deserialize","","",6,[[["__d"]],[["result",["defaultschemaraw"]],["defaultschemaraw"]]]],[11,"deserialize","","",26,[[["__d"]],[["result",["resolvable"]],["resolvable"]]]],[11,"deserialize","","",60,[[["d"]],[["result",["coders"]],["coders"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",60,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",29,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","paperclip::v2","",7,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","paperclip::v2::models","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",26,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","paperclip::v2::im","",58,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","paperclip::v2::models","",3,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","paperclip::v2::im","",59,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","paperclip::v2::models","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",25,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"name","paperclip::v2","",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"set_name","","",7,[[["str"],["self"]]]],[11,"set_cyclic","","",7,[[["self"],["bool"]]]],[11,"is_cyclic","","",7,[[["self"]],["bool"]]],[11,"description","","",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"reference","","",7,[[["self"]],[["str"],["option",["str"]]]]],[11,"set_reference","","",7,[[["self"],["string"]]]],[11,"data_type","","",7,[[["self"]],[["option",["datatype"]],["datatype"]]]],[11,"format","","",7,[[["self"]],[["datatypeformat"],["option",["datatypeformat"]]]]],[11,"items","","",7,[[["self"]],[["option",["resolvable"]],["resolvable"]]]],[11,"items_mut","","",7,[[["self"]],[["resolvable"],["option",["resolvable"]]]]],[11,"additional_properties","","",7,[[["self"]],[["option",["either"]],["either"]]]],[11,"additional_properties_mut","","",7,[[["self"]],[["option",["either"]],["either"]]]],[11,"properties","","",7,[[["self"]],[["option",["btreemap"]],["btreemap"]]]],[11,"properties_mut","","",7,[[["self"]],[["btreemap"],["option",["btreemap"]]]]],[11,"required_properties","","",7,[[["self"]],[["option",["btreeset"]],["btreeset"]]]],[11,"enum_variants","","",7,[[["self"]],["option"]]],[11,"raw_schema","paperclip::actix::web","",51,[[],["defaultschemaraw"]]],[11,"deref_mut","paperclip::v2::im","",59,[[["self"]]]],[11,"deref_mut","paperclip::v2::models","",60,[[["self"]]]],[11,"deref_mut","","",26,[[["self"]]]],[11,"deref_mut","paperclip::v2::im","",58,[[["self"]]]],[11,"deref_mut","paperclip::v2::models","",25,[[["self"]]]],[11,"cmp","","",21,[[["self"],["operationprotocol"]],["ordering"]]],[11,"cmp","","",17,[[["parameterin"],["self"]],["ordering"]]],[11,"cmp","","",24,[[["httpmethod"],["self"]],["ordering"]]],[11,"cmp","","",29,[[["mediarange"],["self"]],["ordering"]]],[11,"cmp","","",18,[[["collectionformat"],["self"]],["ordering"]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"respond_to","paperclip::actix","",57,[[["httprequest"]]]],[11,"serialize","paperclip::v2::models","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",22,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",23,[[["self"],["__s"]],["result"]]],[11,"serialize","","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","paperclip::v2::im","",58,[[["s"],["self"]],["result"]]],[11,"serialize","paperclip::v2::models","",28,[[["self"],["__s"]],["result"]]],[11,"serialize","","",25,[[["self"],["__s"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"serialize","paperclip::v2::im","",59,[[["s"],["self"]],["result"]]],[11,"serialize","paperclip::v2::models","",29,[[["s"],["self"]],["result"]]],[11,"serialize","","",24,[[["self"],["__s"]],["result"]]],[11,"serialize","","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","","",60,[[["s"],["self"]],["result"]]],[11,"serialize","","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","","",26,[[["s"],["self"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",1,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",21,[[["self"],["__s"]],["result"]]],[11,"serialize","paperclip::v2","",7,[[["self"],["__s"]],["result"]]],[11,"clone","paperclip::v2::models","",6,[[["self"]],["defaultschemaraw"]]],[11,"clone","","",8,[[["self"]],["info"]]],[11,"clone","","",16,[[["self"]],["items"]]],[11,"clone","","",25,[[["self"]],["either"]]],[11,"clone","","",26,[[["self"]],["resolvable"]]],[11,"clone","","",29,[[["self"]],["mediarange"]]],[11,"clone","paperclip::v2::im","",59,[[["self"]],["arcrwlock"]]],[11,"clone","paperclip::v2::models","",23,[[["self"]],["header"]]],[11,"clone","","",15,[[["self"]],["parameter"]]],[11,"clone","","",17,[[["self"]],["parameterin"]]],[11,"clone","","",1,[[["self"]],["version"]]],[11,"clone","","",2,[[["self"]],["datatype"]]],[11,"clone","","",3,[[["self"]],["datatypeformat"]]],[11,"clone","paperclip::v2::im","",58,[[["self"]],["rcrefcell"]]],[11,"clone","paperclip::v2::models","",20,[[["self"]],["reference"]]],[11,"clone","","",11,[[["self"]],["securityscheme"]]],[11,"clone","","",18,[[["self"]],["collectionformat"]]],[11,"clone","","",10,[[["self"]],["license"]]],[11,"clone","","",5,[[["self"]],["specformat"]]],[11,"clone","","",13,[[["self"]],["externaldocs"]]],[11,"clone","","",28,[[["self"]],["coder"]]],[11,"clone","","",21,[[["self"]],["operationprotocol"]]],[11,"clone","","",60,[[["self"]],["coders"]]],[11,"clone","","",14,[[["self"]],["pathitem"]]],[11,"clone","paperclip::v2","",7,[[["self"]],["defaultschema"]]],[11,"clone","paperclip::v2::models","",22,[[["self"]],["response"]]],[11,"clone","","",24,[[["self"]],["httpmethod"]]],[11,"clone","","",9,[[["self"]],["contact"]]],[11,"clone","","",12,[[["self"]],["tag"]]],[11,"clone","","",19,[[["self"]],["operation"]]],[11,"clone","","",4,[[["self"]],["api"]]],[11,"eq","","",2,[[["self"],["datatype"]],["bool"]]],[11,"eq","","",20,[[["reference"],["self"]],["bool"]]],[11,"ne","","",20,[[["reference"],["self"]],["bool"]]],[11,"eq","","",29,[[["mediarange"],["self"]],["bool"]]],[11,"eq","","",24,[[["httpmethod"],["self"]],["bool"]]],[11,"eq","","",1,[[["version"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["operationprotocol"]],["bool"]]],[11,"eq","","",15,[[["parameter"],["self"]],["bool"]]],[11,"ne","","",15,[[["parameter"],["self"]],["bool"]]],[11,"eq","","",5,[[["specformat"],["self"]],["bool"]]],[11,"eq","","",3,[[["datatypeformat"],["self"]],["bool"]]],[11,"eq","","",17,[[["parameterin"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["items"]],["bool"]]],[11,"ne","","",16,[[["self"],["items"]],["bool"]]],[11,"eq","","",18,[[["collectionformat"],["self"]],["bool"]]],[11,"update_parameter","paperclip::actix::web","",79,[[["operation"]]]],[11,"update_parameter","","",50,[[["operation"]]]],[11,"update_definitions","","",50,[[["btreemap"]]]],[11,"update_parameter","","",51,[[["operation"]]]],[11,"update_response","","",51,[[["operation"]]]],[11,"update_parameter","","",79,[[["operation"]]]],[11,"update_definitions","","",79,[[["btreemap"]]]],[11,"update_parameter","","",79,[[["operation"]]]],[11,"update_parameter","","",79,[[["operation"]]]],[11,"update_parameter","","",79,[[["operation"]]]],[11,"update_parameter","","",79,[[["operation"]]]],[11,"update_parameter","","",53,[[["operation"]]]],[11,"update_definitions","","",53,[[["btreemap"]]]],[11,"from","paperclip::v2::models","",26,[[["s"]],["resolvable"]]],[11,"from","paperclip::v2::im","",58,[[["s"]],["rcrefcell"]]],[11,"from","","",59,[[["s"]],["arcrwlock"]]],[11,"from","paperclip::v2::models","",24,[[["method"]],["httpmethod"]]],[11,"deref","","",25,[[["self"]]]],[11,"deref","paperclip::v2::im","",59,[[["self"]]]],[11,"deref","paperclip::v2::models","",63,[[["self"]],["arc"]]],[11,"deref","","",26,[[["self"]]]],[11,"deref","","",60,[[["self"]]]],[11,"deref","","",61,[[["self"]],["arc"]]],[11,"deref","","",64,[[["self"]],["mediarange"]]],[11,"deref","paperclip::v2::im","",58,[[["self"]]]],[11,"deref","paperclip::v2::models","",62,[[["self"]],["mediarange"]]],[11,"initialize","","",61,[[["json_coder"]]]],[11,"initialize","","",63,[[["yaml_coder"]]]],[11,"initialize","","",64,[[["yaml_mime"]]]],[11,"initialize","","",62,[[["json_mime"]]]],[11,"partial_cmp","","",21,[[["self"],["operationprotocol"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",18,[[["collectionformat"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",17,[[["parameterin"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",24,[[["httpmethod"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",29,[[["mediarange"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"default","","",10,[[],["license"]]],[11,"default","","",28,[[],["coder"]]],[11,"default","","",11,[[],["securityscheme"]]],[11,"default","","",5,[[],["specformat"]]],[11,"default","","",19,[[],["operation"]]],[11,"default","","",1,[[],["version"]]],[11,"default","","",4,[[],["api"]]],[11,"default","","",26,[[],["resolvable"]]],[11,"default","","",9,[[],["contact"]]],[11,"default","","",17,[[],["parameterin"]]],[11,"default","","",60,[[],["coders"]]],[11,"default","","",18,[[],["collectionformat"]]],[11,"default","","",22,[[],["response"]]],[11,"default","","",6,[[],["defaultschemaraw"]]],[11,"default","","",20,[[],["reference"]]],[11,"default","","",16,[[],["items"]]],[11,"default","","",12,[[],["tag"]]],[11,"default","paperclip::v2","",7,[[],["defaultschema"]]],[11,"default","paperclip::v2::models","",14,[[],["pathitem"]]],[11,"default","","",15,[[],["parameter"]]],[11,"default","","",8,[[],["info"]]],[11,"default","","",13,[[],["externaldocs"]]],[11,"default","","",23,[[],["header"]]],[11,"poll_next","paperclip::actix::web","",52,[[["payload"],["pin",["payload"]],["context"]],[["option"],["poll",["option"]]]]],[11,"headers","","Returns Request's headers.",76,[[["self"]],["headermap"]]],[11,"extensions","","Request extensions",76,[[["self"]],[["extensions"],["ref",["extensions"]]]]],[11,"extensions_mut","","Mutable reference to a the request's extensions",76,[[["self"]],[["extensions"],["refmut",["extensions"]]]]],[11,"take_payload","","",76,[[["self"]],["payload"]]],[11,"from_request","","",72,[[["httprequest"],["payload"]]]],[11,"from_request","","",53,[[["httprequest"],["payload"]]]],[11,"from_request","","",51,[[["httprequest"],["payload"]]]],[11,"from_request","","",52,[[["httprequest"],["payload"]]]],[11,"from_request","","",50,[[["httprequest"],["payload"]]]],[11,"from_request","","",76,[[["httprequest"],["payload"]]]],[11,"from_request","","",79,[[["httprequest"],["payload"]]]],[11,"from_request","","",74,[[["httprequest"],["payload"]]]],[11,"eq","","",79,[[["self"],["path"]],["bool"]]],[11,"ne","","",79,[[["self"],["path"]],["bool"]]],[11,"eq","","",53,[[["query"],["self"]],["bool"]]],[11,"ne","","",53,[[["query"],["self"]],["bool"]]],[11,"eq","","",50,[[["form"],["self"]],["bool"]]],[11,"ne","","",50,[[["form"],["self"]],["bool"]]],[11,"partial_cmp","","",50,[[["form"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",50,[[["form"],["self"]],["bool"]]],[11,"le","","",50,[[["form"],["self"]],["bool"]]],[11,"gt","","",50,[[["form"],["self"]],["bool"]]],[11,"ge","","",50,[[["form"],["self"]],["bool"]]],[11,"partial_cmp","","",79,[[["self"],["path"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",79,[[["self"],["path"]],["bool"]]],[11,"le","","",79,[[["self"],["path"]],["bool"]]],[11,"gt","","",79,[[["self"],["path"]],["bool"]]],[11,"ge","","",79,[[["self"],["path"]],["bool"]]],[11,"partial_cmp","","",53,[[["query"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",53,[[["query"],["self"]],["bool"]]],[11,"le","","",53,[[["query"],["self"]],["bool"]]],[11,"gt","","",53,[[["query"],["self"]],["bool"]]],[11,"ge","","",53,[[["query"],["self"]],["bool"]]],[11,"fmt","","",53,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",79,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",74,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",76,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"deref_mut","","",79,[[["self"]],["t"]]],[11,"deref_mut","","",50,[[["self"]],["t"]]],[11,"deref_mut","","",53,[[["self"]],["t"]]],[11,"deref_mut","","",51,[[["self"]],["t"]]],[11,"cmp","","",79,[[["self"],["path"]],["ordering"]]],[11,"cmp","","",50,[[["form"],["self"]],["ordering"]]],[11,"cmp","","",53,[[["query"],["self"]],["ordering"]]],[11,"deref","","",79,[[["self"]],["t"]]],[11,"deref","","",53,[[["self"]],["t"]]],[11,"deref","","",50,[[["self"]],["t"]]],[11,"deref","","",51,[[["self"]],["t"]]],[11,"deref","","",74,[[["self"]],["arc"]]],[11,"as_ref","","",79,[[["self"]],["t"]]],[11,"drop","","",76,[[["self"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",79,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",53,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"get_encoding","","",77,[[["self"]],[["option",["contentencoding"]],["contentencoding"]]]],[11,"encoding","","",77,[[["self"],["contentencoding"]],["response"]]],[11,"clone","","",76,[[["self"]],["httprequest"]]],[11,"clone","","",81,[[["self"]],["payloadconfig"]]],[11,"clone","","",82,[[["self"]],["queryconfig"]]],[11,"clone","","",80,[[["self"]],["pathconfig"]]],[11,"clone","","",75,[[["self"]],["formconfig"]]],[11,"clone","","",74,[[["self"]],["data"]]],[11,"clone","","",78,[[["self"]],["jsonconfig"]]],[11,"respond_to","","",51,[[["httprequest"]]]],[11,"respond_to","","",72,[[["httprequest"]]]],[11,"respond_to","","",73,[[["httprequest"]]]],[11,"respond_to","","",77,[[["httprequest"]]]],[11,"respond_to","","",50,[[["httprequest"]]]],[11,"from","","",79,[[["t"]],["path"]]],[11,"default","","",81,[[],["payloadconfig"]]],[11,"default","","",75,[[],["formconfig"]]],[11,"default","","",82,[[],["queryconfig"]]],[11,"default","","",78,[[],["jsonconfig"]]],[11,"default","","",80,[[],["pathconfig"]]],[11,"try_into","","",72,[[],[["result",["headervalue"]],["headervalue"]]]],[11,"fmt","","",77,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll","","",77,[[["context"],["response"],["pin",["response"]]],["poll"]]],[11,"size","","",73,[[["self"]],["bodysize"]]],[11,"poll_next","","",73,[[["self"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"size","","",72,[[["self"]],["bodysize"]]],[11,"poll_next","","",72,[[["self"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",77,[[["string"]],[["response",["body"]],["body"]]]],[11,"from","","",77,[[["bytes"]],[["response",["body"]],["body"]]]],[11,"from","","",77,[[["str"]],[["response",["body"]],["body"]]]],[11,"from","","",77,[[["responsebuilder"]],[["response",["body"]],["body"]]]],[11,"from","","",77,[[["string"]],[["response",["body"]],["body"]]]],[11,"from","","",77,[[["error"]],[["response",["body"]],["body"]]]],[11,"from","","",77,[[],[["response",["body"]],["body"]]]],[11,"from","","",77,[[["result"]],[["response",["body"]],["body"]]]],[11,"from","","",77,[[["bytesmut"]],[["response",["body"]],["body"]]]],[11,"from","","",71,[[["serviceconfig"]],["serviceconfig"]]],[11,"new_service","","",70,[[["self"]]]],[11,"path","","",69,[[["self"]],["str"]]],[11,"operations","","",69,[[["self"]],[["operation",["parameter","response"]],["btreemap",["httpmethod","operation"]],["httpmethod"]]]],[11,"security_definitions","","",69,[[["self"]],[["securityscheme"],["btreemap",["string","securityscheme"]],["string"]]]],[11,"definitions","","",69,[[["self"]],[["btreemap",["string","defaultschemaraw"]],["string"],["defaultschemaraw"]]]],[11,"update_operations","","",69,[[["self"],["btreemap"]]]],[11,"path","","",68,[[["self"]],["str"]]],[11,"operations","","",68,[[["self"]],[["operation",["parameter","response"]],["btreemap",["httpmethod","operation"]],["httpmethod"]]]],[11,"definitions","","",68,[[["self"]],[["btreemap",["string","defaultschemaraw"]],["string"],["defaultschemaraw"]]]],[11,"security_definitions","","",68,[[["self"]],[["securityscheme"],["btreemap",["string","securityscheme"]],["string"]]]],[11,"path","","",71,[[["self"]],["str"]]],[11,"operations","","",71,[[["self"]],[["operation",["parameter","response"]],["btreemap",["httpmethod","operation"]],["httpmethod"]]]],[11,"security_definitions","","",71,[[["self"]],[["securityscheme"],["btreemap",["string","securityscheme"]],["string"]]]],[11,"definitions","","",71,[[["self"]],[["btreemap",["string","defaultschemaraw"]],["string"],["defaultschemaraw"]]]],[11,"update_operations","","",71,[[["self"],["btreemap"]]]],[11,"into_factory","","",68,[[],["t"]]],[11,"register","","",68,[[["appservice"]]]],[11,"register","","",69,[[["appservice"]]]],[11,"state","paperclip::v2::codegen","",65,[[["self"]],["emitterstate"]]],[11,"from","paperclip","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["validationerror"]],["self"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","paperclip::v2::codegen","",65,[[["emitterstate"]],["self"]]],[11,"clone","paperclip::v2::codegen::object","",39,[[["self"]],["apiobject"]]],[11,"clone","","",46,[[["self"]],["objectcontainer"]]],[11,"clone","","",40,[[["self"]],["pathops"]]],[11,"clone","","",41,[[["self"]],["oprequirement"]]],[11,"clone","","",42,[[["self"]],["response"]]],[11,"clone","","",43,[[["self"]],["parameter"]]],[11,"clone","","",44,[[["self"]],["objectvariant"]]],[11,"clone","","",45,[[["self"]],["objectfield"]]],[11,"clone","paperclip::v2","",35,[[["self"]],["emitterstate"]]],[11,"clone","paperclip::v2::codegen","",36,[[["self"]],["cratemeta"]]],[11,"clone","","",38,[[["self"]],["emitmode"]]],[11,"default","paperclip::v2::codegen::object","",39,[[],["apiobject"]]],[11,"default","","",40,[[],["pathops"]]],[11,"default","","",42,[[],["response"]]],[11,"default","","",46,[[],["self"]]],[11,"default","paperclip::v2","",35,[[],["emitterstate"]]],[11,"default","paperclip::v2::codegen","",36,[[],["cratemeta"]]],[11,"default","","",38,[[],["self"]]],[11,"eq","","",38,[[["self"],["emitmode"]],["bool"]]],[11,"fmt","paperclip","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","paperclip::v2::codegen","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","paperclip::v2::codegen::object","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","paperclip::v2","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","paperclip::v2::codegen","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","paperclip","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","paperclip::v2::codegen::object","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"name","paperclip","",0,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",0,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",0,[[["self"]],[["option",["backtrace"]],["backtrace"]]]],[11,"is_primitive","paperclip::v2::models","Checks if this is a primitive type.",2,[[],["bool"]]],[11,"path_parameters_map","","Gets the parameters from the given path template and calls…",4,[[["str"]],[["str"],["cow",["str"]]]]],[11,"resolve","","Consumes this API schema, resolves the references and…",4,[[],[["api",["arcrwlock","arcrwlock","resolvable"]],["validationerror"],["result",["api","validationerror"]]]]],[11,"coder","","The en/decoder used for this format.",5,[[],[["arc",["coder"]],["coder"]]]],[11,"mime","","The mime for this format.",5,[[],["mediarange"]]],[11,"remove_refs","","Recursively removes all `$ref` values in this schema.",6,[[["self"]]]],[11,"retain_ref","","Recursively removes all properties other than `$ref` value…",6,[[["self"]]]],[11,"update_definitions","","Adds or updates this definition to the map of security…",11,[[["str"],["btreemap"]]]],[11,"append_map","","Appends one map to the other whilst merging individual…",11,[[["btreemap",["string","securityscheme"]],["string"],["securityscheme"],["btreemap"]]]],[11,"normalize","","Normalizes this operation map. - Collects and removes…",14,[[["self"]]]],[11,"check","","Checks the validity of this parameter using the relative…",15,[[["str"],["self"]],[["validationerror"],["result",["validationerror"]]]]],[11,"set_parameter_names_from_path_template","","Overwrites the names of parameters in this operation using…",19,[[["str"],["self"]]]],[11,"allows_body","","Whether this method allows body in requests.",24,[[],["bool"]]],[11,"right","","Get a readable reference to the right variant (if it…",25,[[["self"]],[["option"],["r"]]]],[11,"right_mut","","Get a mutable reference to the right variant (if it exists).",25,[[["self"]],[["option"],["r"]]]],[11,"left","","Get a readable reference to the left variant (if it exists).",25,[[["self"]],[["option"],["l"]]]],[11,"left_mut","","Get a mutable reference to the left variant (if it exists).",25,[[["self"]],[["option"],["l"]]]],[11,"get_description","","Fetch the description for this schema.",26,[[["self"]],[["option",["string"]],["string"]]]],[11,"matching_coder","","Returns the matching coder for the given media range (if…",60,[[["mediarange"],["self"]],[["arc",["coder"]],["option",["arc"]]]]],[11,"def_ns_name","paperclip::v2::codegen","Returns an iterator of path components for the given…",49,[[["self"]],[["error"],["result",["box","error"]],["box",["iterator"]]]]],[11,"def_name","","Returns the CamelCase name for the given definition.",49,[[["self"]],[["result",["string","error"]],["error"],["string"]]]],[11,"def_anon_name","","Returns the CamelCase name for some definition based on…",49,[[["self"]],[["option",["string"]],["string"]]]],[11,"enum_variant","","Returns the enum variant of a possible value in the given…",49,[[["value"],["self"]],[["option",["objectvariant"]],["objectvariant"]]]],[11,"def_mod_path","","Returns the module path (from working directory) for the…",49,[[["self"]],[["result",["pathbuf","error"]],["pathbuf"],["error"]]]],[11,"unknown_op_mod_path","","Called whenever we encounter an operation that can't be…",49,[[["str"],["resolvableoperation"],["self"],["httpmethod"]],[["result",["pathbuf","error"]],["pathbuf"],["error"]]]],[11,"unknown_op_object","","Called whenever we don't have an object for the module…",49,[[["str"],["resolvableoperation"],["self"],["httpmethod"]],[["result",["apiobject","error"]],["error"],["apiobject"]]]],[11,"generate","","Entrypoint for emitter. Given an API spec, generate code…",49,[[["resolvableapi"],["self"]],[["result",["error"]],["error"]]]],[11,"build_def","","Builds a schema. This resolves type aliases to known types…",49,[[["self"],["definitioncontext"]],[["emittedunit"],["result",["emittedunit","error"]],["error"]]]],[11,"impl_repr","paperclip::v2::codegen::object","Returns a struct representing the impl for this object.…",39,[[["str"],["self"]],["apiobjectimpl"]]],[11,"new","paperclip::actix::web","Wrapper for `actix_web::Resource::new`.",68,[[["str"]],[["resource",["resourceendpoint"]],["resource",["resource"]]]]],[11,"name","","Proxy for `actix_web::Resource::name`.",68,[[["str"]],[["resource"],["resource",["resource"]]]]],[11,"guard","","Proxy for `actix_web::Resource::guard`.",68,[[["g"]],[["resource"],["resource",["resource"]]]]],[11,"route","","Wrapper for `actix_web::Resource::route`.",68,[[["route"]],[["resource"],["resource",["resource"]]]]],[11,"data","","Proxy for `actix_web::Resource::data`.",68,[[["u"]],[["resource"],["resource",["resource"]]]]],[11,"app_data","","Proxy for `actix_web::Resource::app_data`.",68,[[["u"]],[["resource"],["resource",["resource"]]]]],[11,"to","","Wrapper for `actix_web::Resource::to`.",68,[[["f"]],[["resource"],["resource",["resource"]]]]],[11,"wrap","","Proxy for `actix_web::web::Resource::wrap`.",68,[[["m"]],[["resource"],["resource",["resource"]]]]],[11,"wrap_fn","","Proxy for `actix_web::web::Resource::wrap_fn`.",68,[[["f"]],[["resource"],["resource",["resource"]]]]],[11,"default_service","","Proxy for `actix_web::web::Resource::default_service`.",68,[[["f"]],[["resource"],["resource",["resource"]]]]],[11,"new","","Wrapper for `actix_web::Scope::new`",69,[[["str"]],[["scope",["scope"]],["scope",["scopeendpoint"]]]]],[11,"guard","","Proxy for `actix_web::Scope::guard`.",69,[[["g"]],[["scope",["scope"]],["scope"]]]],[11,"data","","Proxy for `actix_web::Scope::data`.",69,[[["u"]],[["scope",["scope"]],["scope"]]]],[11,"configure","","Wrapper for `actix_web::Scope::configure`.",69,[[["f"]],[["scope",["scope"]],["scope"]]]],[11,"service","","Wrapper for `actix_web::Scope::service`.",69,[[["f"]],[["scope",["scope"]],["scope"]]]],[11,"route","","Wrapper for `actix_web::Scope::route`.",69,[[["str"],["route"]],[["scope",["scope"]],["scope"]]]],[11,"default_service","","Proxy for `actix_web::web::Scope::default_service`.",69,[[["f"]],[["scope",["scope"]],["scope"]]]],[11,"wrap","","Proxy for `actix_web::web::Scope::wrap`.",69,[[["m"]],[["scope"],["scope",["scope"]]]]],[11,"wrap_fn","","Proxy for `actix_web::web::Scope::wrap_fn`.",69,[[["f"]],[["scope"],["scope",["scope"]]]]],[11,"new","","Wrapper for `actix_web::Route::new`",70,[[],["route"]]],[11,"method","","Wrapper for `actix_web::Route::method`",70,[[["method"]],["route"]]],[11,"guard","","Proxy for `actix_web::Route::guard`.",70,[[["g"]],["route"]]],[11,"to","","Wrapper for `actix_web::Route::to`",70,[[["f"]],["route"]]],[11,"route","","Wrapper for `actix_web::web::ServiceConfig::route`.",71,[[["str"],["self"],["route"]],["serviceconfig"]]],[11,"service","","Wrapper for `actix_web::web::ServiceConfig::service`.",71,[[["self"],["f"]],["serviceconfig"]]],[11,"external_resource","","Proxy for…",71,[[["u"],["self"],["n"]],["serviceconfig"]]],[11,"new","","Creates a new empty `Bytes`.",72,[[],["bytes"]]],[11,"from_static","","Creates a new `Bytes` from a static slice.",72,[[],["bytes"]]],[11,"len","","Returns the number of bytes contained in this `Bytes`.",72,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Bytes` has a length of 0.",72,[[["self"]],["bool"]]],[11,"copy_from_slice","","Creates `Bytes` instance from slice, by copying it.",72,[[],["bytes"]]],[11,"slice","","Returns a slice of self for the provided range.",72,[[["self"]],["bytes"]]],[11,"slice_ref","","Returns a slice of self that is equivalent to the given…",72,[[["self"]],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",72,[[["self"],["usize"]],["bytes"]]],[11,"split_to","","Splits the bytes into two at the given index.",72,[[["self"],["usize"]],["bytes"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",72,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",72,[[["self"]]]],[11,"with_capacity","","Creates a new `BytesMut` with the specified capacity.",73,[[["usize"]],["bytesmut"]]],[11,"new","","Creates a new `BytesMut` with default capacity.",73,[[],["bytesmut"]]],[11,"len","","Returns the number of bytes contained in this `BytesMut`.",73,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `BytesMut` has a length of 0.",73,[[["self"]],["bool"]]],[11,"capacity","","Returns the number of bytes the `BytesMut` can hold…",73,[[["self"]],["usize"]]],[11,"freeze","","Converts `self` into an immutable `Bytes`.",73,[[],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",73,[[["self"],["usize"]],["bytesmut"]]],[11,"split","","Removes the bytes from the current view, returning them in…",73,[[["self"]],["bytesmut"]]],[11,"split_to","","Splits the buffer into two at the given index.",73,[[["self"],["usize"]],["bytesmut"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",73,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",73,[[["self"]]]],[11,"resize","","Resizes the buffer so that `len` is equal to `new_len`.",73,[[["self"],["usize"],["u8"]]]],[11,"set_len","","Sets the length of the buffer.",73,[[["self"],["usize"]]]],[11,"reserve","","Reserves capacity for at least `additional` more bytes to…",73,[[["self"],["usize"]]]],[11,"extend_from_slice","","Appends given bytes to this `BytesMut`.",73,[[["self"]]]],[11,"unsplit","","Absorbs a `BytesMut` that was previously split off.",73,[[["self"],["bytesmut"]]]],[11,"new","","Create new `Data` instance.",74,[[["t"]],["data"]]],[11,"get_ref","","Get reference to inner app data.",74,[[["self"]],["t"]]],[11,"into_inner","","Convert to the internal Arc",74,[[],["arc"]]],[11,"into_inner","","Deconstruct to an inner value",50,[[],["t"]]],[11,"limit","","Change max size of payload. By default max size is 16Kb",75,[[["usize"]],["formconfig"]]],[11,"error_handler","","Set custom error handler",75,[[["f"]],["formconfig"]]],[11,"head","","This method returns reference to the request head",76,[[["self"]],["requesthead"]]],[11,"uri","","Request's uri.",76,[[["self"]],["uri"]]],[11,"method","","Read the Request method.",76,[[["self"]],["method"]]],[11,"version","","Read the Request Version.",76,[[["self"]],["version"]]],[11,"headers","","Returns request's headers.",76,[[["self"]],["headermap"]]],[11,"path","","The target path of this Request.",76,[[["self"]],["str"]]],[11,"query_string","","The query string in the URL.",76,[[["self"]],["str"]]],[11,"match_info","","Get a reference to the Path parameters.",76,[[["self"]],["path"]]],[11,"extensions","","Request extensions",76,[[["self"]],[["extensions"],["ref",["extensions"]]]]],[11,"extensions_mut","","Mutable reference to a the request's extensions",76,[[["self"]],[["extensions"],["refmut",["extensions"]]]]],[11,"url_for","","Generate url for named resource",76,[[["str"],["u"],["self"]],[["result",["url","urlgenerationerror"]],["urlgenerationerror"],["url"]]]],[11,"url_for_static","","Generate url for named resource",76,[[["str"],["self"]],[["result",["url","urlgenerationerror"]],["urlgenerationerror"],["url"]]]],[11,"resource_map","","Get a reference to a `ResourceMap` of current application.",76,[[["self"]],["resourcemap"]]],[11,"peer_addr","","Peer socket address",76,[[["self"]],[["option",["socketaddr"]],["socketaddr"]]]],[11,"connection_info","","Get ConnectionInfo for the current request.",76,[[["self"]],[["ref",["connectioninfo"]],["connectioninfo"]]]],[11,"app_config","","App config",76,[[["self"]],["appconfig"]]],[11,"app_data","","Get an application data stored with `App::extension()`…",76,[[["self"]],[["option"],["t"]]]],[11,"Ok","","",77,[[],["responsebuilder"]]],[11,"Created","","",77,[[],["responsebuilder"]]],[11,"Accepted","","",77,[[],["responsebuilder"]]],[11,"NonAuthoritativeInformation","","",77,[[],["responsebuilder"]]],[11,"NoContent","","",77,[[],["responsebuilder"]]],[11,"ResetContent","","",77,[[],["responsebuilder"]]],[11,"PartialContent","","",77,[[],["responsebuilder"]]],[11,"MultiStatus","","",77,[[],["responsebuilder"]]],[11,"AlreadyReported","","",77,[[],["responsebuilder"]]],[11,"MultipleChoices","","",77,[[],["responsebuilder"]]],[11,"MovedPermanently","","",77,[[],["responsebuilder"]]],[11,"Found","","",77,[[],["responsebuilder"]]],[11,"SeeOther","","",77,[[],["responsebuilder"]]],[11,"NotModified","","",77,[[],["responsebuilder"]]],[11,"UseProxy","","",77,[[],["responsebuilder"]]],[11,"TemporaryRedirect","","",77,[[],["responsebuilder"]]],[11,"PermanentRedirect","","",77,[[],["responsebuilder"]]],[11,"BadRequest","","",77,[[],["responsebuilder"]]],[11,"NotFound","","",77,[[],["responsebuilder"]]],[11,"Unauthorized","","",77,[[],["responsebuilder"]]],[11,"PaymentRequired","","",77,[[],["responsebuilder"]]],[11,"Forbidden","","",77,[[],["responsebuilder"]]],[11,"MethodNotAllowed","","",77,[[],["responsebuilder"]]],[11,"NotAcceptable","","",77,[[],["responsebuilder"]]],[11,"ProxyAuthenticationRequired","","",77,[[],["responsebuilder"]]],[11,"RequestTimeout","","",77,[[],["responsebuilder"]]],[11,"Conflict","","",77,[[],["responsebuilder"]]],[11,"Gone","","",77,[[],["responsebuilder"]]],[11,"LengthRequired","","",77,[[],["responsebuilder"]]],[11,"PreconditionFailed","","",77,[[],["responsebuilder"]]],[11,"PreconditionRequired","","",77,[[],["responsebuilder"]]],[11,"PayloadTooLarge","","",77,[[],["responsebuilder"]]],[11,"UriTooLong","","",77,[[],["responsebuilder"]]],[11,"UnsupportedMediaType","","",77,[[],["responsebuilder"]]],[11,"RangeNotSatisfiable","","",77,[[],["responsebuilder"]]],[11,"ExpectationFailed","","",77,[[],["responsebuilder"]]],[11,"UnprocessableEntity","","",77,[[],["responsebuilder"]]],[11,"TooManyRequests","","",77,[[],["responsebuilder"]]],[11,"InternalServerError","","",77,[[],["responsebuilder"]]],[11,"NotImplemented","","",77,[[],["responsebuilder"]]],[11,"BadGateway","","",77,[[],["responsebuilder"]]],[11,"ServiceUnavailable","","",77,[[],["responsebuilder"]]],[11,"GatewayTimeout","","",77,[[],["responsebuilder"]]],[11,"VersionNotSupported","","",77,[[],["responsebuilder"]]],[11,"VariantAlsoNegotiates","","",77,[[],["responsebuilder"]]],[11,"InsufficientStorage","","",77,[[],["responsebuilder"]]],[11,"LoopDetected","","",77,[[],["responsebuilder"]]],[11,"build","","Create http response builder with specific status.",77,[[["statuscode"]],["responsebuilder"]]],[11,"build_from","","Create http response builder",77,[[["t"]],["responsebuilder"]]],[11,"new","","Constructs a response",77,[[["statuscode"]],[["response",["body"]],["body"]]]],[11,"from_error","","Constructs an error response",77,[[["error"]],[["response",["body"]],["body"]]]],[11,"into_body","","Convert response to response with body",77,[[],["response"]]],[11,"with_body","","Constructs a response with body",77,[[["b"],["statuscode"]],["response"]]],[11,"head","","Http message part of the response",77,[[["self"]],["responsehead"]]],[11,"head_mut","","Mutable reference to a http message part of the response",77,[[["self"]],["responsehead"]]],[11,"error","","The source `error` for this response",77,[[["self"]],[["option",["error"]],["error"]]]],[11,"status","","Get the response status code",77,[[["self"]],["statuscode"]]],[11,"status_mut","","Set the `StatusCode` for this response",77,[[["self"]],["statuscode"]]],[11,"headers","","Get the headers from the response",77,[[["self"]],["headermap"]]],[11,"headers_mut","","Get a mutable reference to the headers",77,[[["self"]],["headermap"]]],[11,"cookies","","Get an iterator for the cookies set by this response",77,[[["self"]],["cookieiter"]]],[11,"add_cookie","","Add a cookie to this response",77,[[["self"],["cookie"]],[["error"],["result",["error"]]]]],[11,"del_cookie","","Remove all cookies with the given name from this response.…",77,[[["str"],["self"]],["usize"]]],[11,"upgrade","","Connection upgrade status",77,[[["self"]],["bool"]]],[11,"keep_alive","","Keep-alive status for this connection",77,[[["self"]],["bool"]]],[11,"extensions","","Responses extensions",77,[[["self"]],[["extensions"],["ref",["extensions"]]]]],[11,"extensions_mut","","Mutable reference to a the response's extensions",77,[[["self"]],[["extensions"],["refmut",["extensions"]]]]],[11,"body","","Get body of this response",77,[[["self"]],["responsebody"]]],[11,"set_body","","Set a body",77,[[["b2"]],["response"]]],[11,"into_parts","","Split response and body",77,[[]]],[11,"drop_body","","Drop request's body",77,[[],["response"]]],[11,"map_body","","Set a body and return previous body value",77,[[["f"]],["response"]]],[11,"take_body","","Extract response body",77,[[["self"]],["responsebody"]]],[11,"into_inner","","Deconstruct to an inner value",51,[[],["t"]]],[11,"limit","","Change max size of payload. By default max size is 32Kb",78,[[["usize"]],["jsonconfig"]]],[11,"error_handler","","Set custom error handler",78,[[["f"]],["jsonconfig"]]],[11,"content_type","","Set predicate for allowed content types",78,[[["f"]],["jsonconfig"]]],[11,"into_inner","","Deconstruct to an inner value",79,[[],["t"]]],[11,"error_handler","","Set custom error handler",80,[[["f"]],["pathconfig"]]],[11,"into_inner","","Deconstruct to a inner value",52,[[],[["payload",["pin"]],["pin",["box"]]]]],[11,"new","","Create `PayloadConfig` instance and set max size of payload.",81,[[["usize"]],["payloadconfig"]]],[11,"limit","","Change max size of payload. By default max size is 256Kb",81,[[["usize"]],["payloadconfig"]]],[11,"mimetype","","Set required mime-type of the request. By default mime…",81,[[["mime"]],["payloadconfig"]]],[11,"into_inner","","Deconstruct to a inner value",53,[[],["t"]]],[11,"from_query","","Get query parameters from the path",53,[[["str"]],[["query"],["result",["query","querypayloaderror"]],["querypayloaderror"]]]],[11,"error_handler","","Set custom error handler",82,[[["f"]],["queryconfig"]]],[11,"data","paperclip::actix","Proxy for `actix_web::App::data`.",83,[[["u"]],["app"]]],[11,"data_factory","","Proxy for `actix_web::App::data_factory`.",83,[[["f"]],["app"]]],[11,"app_data","","Proxy for `actix_web::App::app_data`.",83,[[["u"]],["app"]]],[11,"configure","","Wrapper for `actix_web::App::configure`.",83,[[["f"]],["app"]]],[11,"route","","Wrapper for `actix_web::App::route`.",83,[[["str"],["route"]],["app"]]],[11,"service","","Wrapper for `actix_web::App::service`.",83,[[["f"]],["app"]]],[11,"default_service","","Proxy for `actix_web::App::default_service`.",83,[[["f"]],["app"]]],[11,"external_resource","","Proxy for `actix_web::App::external_resource`.",83,[[["u"],["n"]],["app"]]],[11,"wrap","","Proxy for `actix_web::web::App::wrap`.",83,[[["m"]],["app"]]],[11,"wrap_fn","","Proxy for `actix_web::web::App::wrap_fn`.",83,[[["f"]],["app"]]],[11,"with_json_spec_at","","Mounts the specification for all operations and…",83,[[["str"]],["app"]]],[11,"with_raw_json_spec","","Calls the given function with `App` and JSON `Value`…",83,[[["f"]],["app"]]],[11,"build","","Builds and returns the `actix_web::App`.",83,[[],["app"]]]],"p":[[4,"PaperClipError"],[4,"Version"],[4,"DataType"],[4,"DataTypeFormat"],[3,"Api"],[4,"SpecFormat"],[3,"DefaultSchemaRaw"],[3,"DefaultSchema"],[3,"Info"],[3,"Contact"],[3,"License"],[3,"SecurityScheme"],[3,"Tag"],[3,"ExternalDocs"],[3,"PathItem"],[3,"Parameter"],[3,"Items"],[4,"ParameterIn"],[4,"CollectionFormat"],[3,"Operation"],[3,"Reference"],[4,"OperationProtocol"],[3,"Response"],[3,"Header"],[4,"HttpMethod"],[4,"Either"],[4,"Resolvable"],[13,"Resolved"],[3,"Coder"],[3,"MediaRange"],[8,"Schema"],[8,"TypedData"],[8,"Apiv2Schema"],[8,"Apiv2Operation"],[8,"Apiv2Errors"],[3,"EmitterState"],[3,"CrateMeta"],[4,"EmittedUnit"],[4,"EmitMode"],[3,"ApiObject"],[3,"PathOps"],[3,"OpRequirement"],[3,"Response"],[3,"Parameter"],[3,"ObjectVariant"],[3,"ObjectField"],[4,"ObjectContainer"],[13,"Enum"],[13,"Struct"],[8,"Emitter"],[3,"Form"],[3,"Json"],[3,"Payload"],[3,"Query"],[8,"Mountable"],[8,"OpenApiExt"],[8,"OperationModifier"],[3,"ResponderWrapper"],[3,"RcRefCell"],[3,"ArcRwLock"],[3,"Coders"],[3,"JSON_CODER"],[3,"JSON_MIME"],[3,"YAML_CODER"],[3,"YAML_MIME"],[3,"DefaultEmitter"],[3,"ApiObjectImpl"],[3,"ApiObjectBuilderImpl"],[3,"Resource"],[3,"Scope"],[3,"Route"],[3,"ServiceConfig"],[3,"Bytes"],[3,"BytesMut"],[3,"Data"],[3,"FormConfig"],[3,"HttpRequest"],[3,"HttpResponse"],[3,"JsonConfig"],[3,"Path"],[3,"PathConfig"],[3,"PayloadConfig"],[3,"QueryConfig"],[3,"App"]]};
searchIndex["paperclip_actix"] = {"doc":"","i":[[23,"api_v2_errors","paperclip_actix","Marker attribute for indicating that the marked object can…",null,null],[23,"api_v2_operation","","Marker attribute for indicating that a function is an…",null,null],[24,"Apiv2Schema","","Derive attribute for indicating that a type is an OpenAPI…",null,null],[24,"Apiv2Security","","Marker attribute for indicating that an object forbids…",null,null],[3,"App","","Wrapper for `actix_web::App`.",null,null],[0,"web","","Proxy module for `actix_web::web`.",null,null],[5,"block","paperclip_actix::web","Execute blocking function on a thread pool, returns future…",null,[[["f"]]]],[5,"service","","Create raw service for a specific path.",null,[[["t"]],["webservice"]]],[5,"to","","Create a new route and add handler.",null,[[["f"]],["route"]]],[3,"Bytes","","A reference counted contiguous slice of memory.",null,null],[3,"BytesMut","","A unique reference to a contiguous slice of memory.",null,null],[3,"Data","","Application data.",null,null],[3,"Form","","Form data helper (`application/x-www-form-urlencoded`)",null,null],[12,"0","","",0,null],[3,"FormConfig","","Form extractor configuration",null,null],[3,"HttpRequest","","An HTTP Request",null,null],[3,"HttpResponse","","An HTTP Response",null,null],[3,"Json","","Json helper",null,null],[12,"0","","",1,null],[3,"JsonConfig","","Json extractor configuration",null,null],[3,"Path","","Extract typed information from the request's path.",null,null],[3,"PathConfig","","Path extractor configuration",null,null],[3,"Payload","","Payload extractor returns request 's payload stream.",null,null],[12,"0","","",2,null],[3,"PayloadConfig","","Payload configuration for request's payload.",null,null],[3,"Query","","Extract typed information from the request's query.",null,null],[12,"0","","",3,null],[3,"QueryConfig","","Query extractor configuration",null,null],[3,"Resource","","Wrapper for `actix_web::Resource`",null,null],[3,"Scope","","Wrapper for `actix_web::Scope`",null,null],[3,"Route","","Wrapper for `actix_web::Route`",null,null],[3,"ServiceConfig","","Wrapper for `actix_web::web::ServiceConfig`.",null,null],[5,"resource","","Wrapper for `actix_web::web::resource`.",null,[[["str"]],["resource"]]],[5,"scope","","Wrapper for `actix_web::web::scope`.",null,[[["str"]],["scope"]]],[5,"method","","Wrapper for `actix_web::web::method`.",null,[[["method"]],["route"]]],[5,"get","","Wrapper for `actix_web::web::get`.",null,[[],["route"]]],[5,"put","","Wrapper for `actix_web::web::put`.",null,[[],["route"]]],[5,"post","","Wrapper for `actix_web::web::post`.",null,[[],["route"]]],[5,"patch","","Wrapper for `actix_web::web::patch`.",null,[[],["route"]]],[5,"delete","","Wrapper for `actix_web::web::delete`.",null,[[],["route"]]],[5,"options","","Wrapper for `actix_web::web::options`.",null,[[],["route"]]],[5,"head","","Wrapper for `actix_web::web::head`.",null,[[],["route"]]],[11,"new","","Wrapper for `actix_web::Resource::new`.",4,[[["str"]],["resource"]]],[11,"name","","Proxy for `actix_web::Resource::name`.",4,[[["str"]],["self"]]],[11,"guard","","Proxy for `actix_web::Resource::guard`.",4,[[["guard"]],["self"]]],[11,"route","","Wrapper for `actix_web::Resource::route`.",4,[[["route"]],["self"]]],[11,"data","","Proxy for `actix_web::Resource::data`.",4,[[["u"]],["self"]]],[11,"app_data","","Proxy for `actix_web::Resource::app_data`.",4,[[["u"]],["self"]]],[11,"to","","Wrapper for `actix_web::Resource::to`.",4,[[["f"]],["self"]]],[11,"wrap","","Proxy for `actix_web::web::Resource::wrap`.",4,[[["m"]],[["resource",["resource"]],["resource"]]]],[11,"wrap_fn","","Proxy for `actix_web::web::Resource::wrap_fn`.",4,[[["f"]],[["resource",["resource"]],["resource"]]]],[11,"default_service","","Proxy for `actix_web::web::Resource::default_service`.",4,[[["f"]],["self"]]],[11,"new","","Wrapper for `actix_web::Scope::new`",5,[[["str"]],["self"]]],[11,"guard","","Proxy for `actix_web::Scope::guard`.",5,[[["guard"]],["self"]]],[11,"data","","Proxy for `actix_web::Scope::data`.",5,[[["u"]],["self"]]],[11,"configure","","Wrapper for `actix_web::Scope::configure`.",5,[[["f"]],["self"]]],[11,"service","","Wrapper for `actix_web::Scope::service`.",5,[[["f"]],["self"]]],[11,"route","","Wrapper for `actix_web::Scope::route`.",5,[[["str"],["route"]],["self"]]],[11,"default_service","","Proxy for `actix_web::web::Scope::default_service`.",5,[[["f"]],["self"]]],[11,"wrap","","Proxy for `actix_web::web::Scope::wrap`.",5,[[["m"]],[["scope",["scope"]],["scope"]]]],[11,"wrap_fn","","Proxy for `actix_web::web::Scope::wrap_fn`.",5,[[["f"]],[["scope",["scope"]],["scope"]]]],[11,"new","","Wrapper for `actix_web::Route::new`",6,[[],["route"]]],[11,"method","","Wrapper for `actix_web::Route::method`",6,[[["method"]],["self"]]],[11,"guard","","Proxy for `actix_web::Route::guard`.",6,[[["guard"]],["self"]]],[11,"to","","Wrapper for `actix_web::Route::to`",6,[[["f"]],["self"]]],[11,"route","","Wrapper for `actix_web::web::ServiceConfig::route`.",7,[[["str"],["self"],["route"]],["self"]]],[11,"service","","Wrapper for `actix_web::web::ServiceConfig::service`.",7,[[["self"],["f"]],["self"]]],[11,"external_resource","","Proxy for…",7,[[["u"],["self"],["n"]],["self"]]],[8,"OpenApiExt","paperclip_actix","Extension trait for actix-web applications.",null,null],[16,"Wrapper","","",8,null],[10,"wrap_api","","Consumes this app and produces its wrapper to start…",8,[[]]],[8,"Mountable","","Indicates that this thingmabob has a path and a bunch of…",null,null],[10,"path","","Where this thing gets mounted.",9,[[["self"]],["str"]]],[10,"operations","","Map of HTTP methods and the associated API operations.",9,[[["self"]],[["defaultoperationraw"],["httpmethod"],["btreemap",["httpmethod","defaultoperationraw"]]]]],[10,"definitions","","The definitions recorded by this object.",9,[[["self"]],[["btreemap",["string","defaultschemaraw"]],["defaultschemaraw"],["string"]]]],[10,"security_definitions","","The security definitions recorded by this object.",9,[[["self"]],[["string"],["securityscheme"],["btreemap",["string","securityscheme"]]]]],[11,"update_operations","","Updates the given map of operations with operations…",9,[[["btreemap"],["self"]]]],[11,"data","","Proxy for `actix_web::App::data`.",10,[[["u"]],["self"]]],[11,"data_factory","","Proxy for `actix_web::App::data_factory`.",10,[[["f"]],["self"]]],[11,"app_data","","Proxy for `actix_web::App::app_data`.",10,[[["u"]],["self"]]],[11,"configure","","Wrapper for `actix_web::App::configure`.",10,[[["f"]],["self"]]],[11,"route","","Wrapper for `actix_web::App::route`.",10,[[["str"],["route"]],["self"]]],[11,"service","","Wrapper for `actix_web::App::service`.",10,[[["f"]],["self"]]],[11,"default_service","","Proxy for `actix_web::App::default_service`.",10,[[["f"]],["self"]]],[11,"external_resource","","Proxy for `actix_web::App::external_resource`.",10,[[["u"],["n"]],["self"]]],[11,"wrap","","Proxy for `actix_web::web::App::wrap`.",10,[[["m"]],["app"]]],[11,"wrap_fn","","Proxy for `actix_web::web::App::wrap_fn`.",10,[[["f"]],["app"]]],[11,"with_json_spec_at","","Mounts the specification for all operations and…",10,[[["str"]],["self"]]],[11,"with_raw_json_spec","","Calls the given function with `App` and JSON `Value`…",10,[[["f"]],["self"]]],[11,"build","","Builds and returns the `actix_web::App`.",10,[[],["app"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","paperclip_actix::web","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"equivalent","","",11,[[["k"],["self"]],["bool"]]],[11,"vzip","","",11,[[],["v"]]],[11,"raw_schema","","",11,[[],["defaultschemaraw"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"equivalent","","",12,[[["k"],["self"]],["bool"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"load","","",13,[[["self"]]]],[11,"load","","",13,[[["self"]],["dynguard"]]],[11,"vzip","","",13,[[],["v"]]],[11,"raw_schema","","",13,[[],["defaultschemaraw"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"equivalent","","",0,[[["k"],["self"]],["bool"]]],[11,"load","","",0,[[["self"]]]],[11,"load","","",0,[[["self"]],["dynguard"]]],[11,"vzip","","",0,[[],["v"]]],[11,"raw_schema","","",0,[[],["defaultschemaraw"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"raw_schema","","",15,[[],["defaultschemaraw"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"try_poll","","",16,[[["pin"],["f"],["context"]],["poll"]]],[11,"vzip","","",16,[[],["v"]]],[11,"raw_schema","","",16,[[],["defaultschemaraw"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"load","","",1,[[["self"]]]],[11,"load","","",1,[[["self"]],["dynguard"]]],[11,"vzip","","",1,[[],["v"]]],[11,"raw_schema","","",1,[[],["defaultschemaraw"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[],["t"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"equivalent","","",18,[[["k"],["self"]],["bool"]]],[11,"load","","",18,[[["self"]]]],[11,"load","","",18,[[["self"]],["dynguard"]]],[11,"vzip","","",18,[[],["v"]]],[11,"raw_schema","","",18,[[],["defaultschemaraw"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"try_poll_next","","",2,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"vzip","","",2,[[],["v"]]],[11,"raw_schema","","",2,[[],["defaultschemaraw"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"equivalent","","",3,[[["k"],["self"]],["bool"]]],[11,"load","","",3,[[["self"]]]],[11,"load","","",3,[[["self"]],["dynguard"]]],[11,"vzip","","",3,[[],["v"]]],[11,"raw_schema","","",3,[[],["defaultschemaraw"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_factory","","",6,[[],["t"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"poll_next","","",2,[[["payload"],["pin",["payload"]],["context"]],[["poll",["option"]],["option"]]]],[11,"headers","","Returns Request's headers.",15,[[["self"]],["headermap"]]],[11,"extensions","","Request extensions",15,[[["self"]],[["ref",["extensions"]],["extensions"]]]],[11,"extensions_mut","","Mutable reference to a the request's extensions",15,[[["self"]],[["extensions"],["refmut",["extensions"]]]]],[11,"take_payload","","",15,[[["self"]],["payload"]]],[11,"from_request","","",11,[[["payload"],["httprequest"]]]],[11,"from_request","","",3,[[["payload"],["httprequest"]]]],[11,"from_request","","",1,[[["payload"],["httprequest"]]]],[11,"from_request","","",2,[[["payload"],["httprequest"]]]],[11,"from_request","","",0,[[["payload"],["httprequest"]]]],[11,"from_request","","",15,[[["payload"],["httprequest"]]]],[11,"from_request","","",18,[[["payload"],["httprequest"]]]],[11,"from_request","","",13,[[["payload"],["httprequest"]]]],[11,"eq","","",18,[[["path"],["self"]],["bool"]]],[11,"ne","","",18,[[["path"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["query"]],["bool"]]],[11,"ne","","",3,[[["self"],["query"]],["bool"]]],[11,"eq","","",0,[[["self"],["form"]],["bool"]]],[11,"ne","","",0,[[["self"],["form"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["form"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["form"]],["bool"]]],[11,"le","","",0,[[["self"],["form"]],["bool"]]],[11,"gt","","",0,[[["self"],["form"]],["bool"]]],[11,"ge","","",0,[[["self"],["form"]],["bool"]]],[11,"partial_cmp","","",18,[[["path"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",18,[[["path"],["self"]],["bool"]]],[11,"le","","",18,[[["path"],["self"]],["bool"]]],[11,"gt","","",18,[[["path"],["self"]],["bool"]]],[11,"ge","","",18,[[["path"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["query"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["self"],["query"]],["bool"]]],[11,"le","","",3,[[["self"],["query"]],["bool"]]],[11,"gt","","",3,[[["self"],["query"]],["bool"]]],[11,"ge","","",3,[[["self"],["query"]],["bool"]]],[11,"fmt","","",3,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"deref_mut","","",18,[[["self"]],["t"]]],[11,"deref_mut","","",0,[[["self"]],["t"]]],[11,"deref_mut","","",3,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"cmp","","",18,[[["path"],["self"]],["ordering"]]],[11,"cmp","","",0,[[["self"],["form"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["query"]],["ordering"]]],[11,"deref","","",18,[[["self"]],["t"]]],[11,"deref","","",3,[[["self"]],["t"]]],[11,"deref","","",0,[[["self"]],["t"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref","","",13,[[["self"]],["arc"]]],[11,"as_ref","","",18,[[["self"]],["t"]]],[11,"drop","","",15,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"get_encoding","","",16,[[["self"]],[["contentencoding"],["option",["contentencoding"]]]]],[11,"encoding","","",16,[[["self"],["contentencoding"]],["response"]]],[11,"clone","","",15,[[["self"]],["httprequest"]]],[11,"clone","","",20,[[["self"]],["payloadconfig"]]],[11,"clone","","",21,[[["self"]],["queryconfig"]]],[11,"clone","","",19,[[["self"]],["pathconfig"]]],[11,"clone","","",14,[[["self"]],["formconfig"]]],[11,"clone","","",13,[[["self"]],["data"]]],[11,"clone","","",17,[[["self"]],["jsonconfig"]]],[11,"respond_to","","",1,[[["httprequest"]]]],[11,"respond_to","","",11,[[["httprequest"]]]],[11,"respond_to","","",12,[[["httprequest"]]]],[11,"respond_to","","",16,[[["httprequest"]]]],[11,"respond_to","","",0,[[["httprequest"]]]],[11,"from","","",18,[[["t"]],["path"]]],[11,"default","","",20,[[],["payloadconfig"]]],[11,"default","","",14,[[],["formconfig"]]],[11,"default","","",21,[[],["queryconfig"]]],[11,"default","","",17,[[],["jsonconfig"]]],[11,"default","","",19,[[],["pathconfig"]]],[11,"try_into","","",11,[[],[["headervalue"],["result",["headervalue"]]]]],[11,"fmt","","",16,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"poll","","",16,[[["pin",["response"]],["response"],["context"]],["poll"]]],[11,"size","","",12,[[["self"]],["bodysize"]]],[11,"poll_next","","",12,[[["self"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"size","","",11,[[["self"]],["bodysize"]]],[11,"poll_next","","",11,[[["self"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",16,[[["string"]],[["body"],["response",["body"]]]]],[11,"from","","",16,[[["bytes"]],[["body"],["response",["body"]]]]],[11,"from","","",16,[[["str"]],[["body"],["response",["body"]]]]],[11,"from","","",16,[[["responsebuilder"]],[["body"],["response",["body"]]]]],[11,"from","","",16,[[["string"]],[["body"],["response",["body"]]]]],[11,"from","","",16,[[["error"]],[["body"],["response",["body"]]]]],[11,"from","","",16,[[],[["body"],["response",["body"]]]]],[11,"from","","",16,[[["result"]],[["body"],["response",["body"]]]]],[11,"from","","",16,[[["bytesmut"]],[["body"],["response",["body"]]]]],[11,"from_iter","","",12,[[["t"]],["bytesmut"]]],[11,"from_iter","","",11,[[["t"]],["bytes"]]],[11,"from_iter","","",12,[[["t"]],["bytesmut"]]],[11,"from","","",12,[[],["bytesmut"]]],[11,"from","","",11,[[["string"]],["bytes"]]],[11,"from","","",11,[[["bytesmut"]],["bytes"]]],[11,"from","","",11,[[],["bytes"]]],[11,"from","","",11,[[["vec",["u8"]],["u8"]],["bytes"]]],[11,"from","","",12,[[["str"]],["bytesmut"]]],[11,"from","","",11,[[["str"]],["bytes"]]],[11,"into_iter","","",11,[[]]],[11,"into_iter","","",12,[[]]],[11,"write_str","","",12,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"write_fmt","","",12,[[["self"],["arguments"]],[["result",["error"]],["error"]]]],[11,"clone","","",11,[[["self"]],["bytes"]]],[11,"clone","","",12,[[["self"]],["bytesmut"]]],[11,"fmt","","",11,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",11,[[["bytes"],["self"]],["ordering"]]],[11,"cmp","","",12,[[["self"],["bytesmut"]],["ordering"]]],[11,"remaining","","",12,[[["self"]],["usize"]]],[11,"bytes","","",12,[[["self"]]]],[11,"advance","","",12,[[["self"],["usize"]]]],[11,"to_bytes","","",12,[[["self"]],["bytes"]]],[11,"remaining","","",11,[[["self"]],["usize"]]],[11,"bytes","","",11,[[["self"]]]],[11,"advance","","",11,[[["self"],["usize"]]]],[11,"to_bytes","","",11,[[["self"]],["bytes"]]],[11,"deref_mut","","",12,[[["self"]]]],[11,"default","","",11,[[],["bytes"]]],[11,"default","","",12,[[],["bytesmut"]]],[11,"extend","","",12,[[["self"],["t"]]]],[11,"extend","","",12,[[["self"],["t"]]]],[11,"deref","","",12,[[["self"]]]],[11,"deref","","",11,[[["self"]]]],[11,"as_ref","","",12,[[["self"]]]],[11,"as_ref","","",11,[[["self"]]]],[11,"as_mut","","",12,[[["self"]]]],[11,"remaining_mut","","",12,[[["self"]],["usize"]]],[11,"advance_mut","","",12,[[["self"],["usize"]]]],[11,"bytes_mut","","",12,[[["self"]]]],[11,"put","","",12,[[["self"],["t"]]]],[11,"put_slice","","",12,[[["self"]]]],[11,"eq","","",11,[[["self"],["vec"]],["bool"]]],[11,"eq","","",12,[[["t"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"]],["bool"]]],[11,"eq","","",12,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",11,[[["bytes"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"],["vec"]],["bool"]]],[11,"eq","","",12,[[["self"],["string"]],["bool"]]],[11,"eq","","",11,[[["t"],["self"]],["bool"]]],[11,"eq","","",12,[[["bytes"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["bytesmut"]],["bool"]]],[11,"eq","","",11,[[["str"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["string"]],["bool"]]],[11,"eq","","",12,[[["str"],["self"]],["bool"]]],[11,"drop","","",12,[[["self"]]]],[11,"drop","","",11,[[["self"]]]],[11,"hash","","",11,[[["self"],["h"]]]],[11,"hash","","",12,[[["self"],["h"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"partial_cmp","","",12,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",12,[[["self"],["bytesmut"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",12,[[["self"],["vec"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["string"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",12,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",12,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["t"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",12,[[["self"],["string"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["bytes"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",11,[[["self"],["vec"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"borrow","","",11,[[["self"]]]],[11,"borrow","","",12,[[["self"]]]],[11,"borrow_mut","","",12,[[["self"]]]],[11,"from","","",11,[[["custom"]],["bytes"]]],[11,"from","","",11,[[["bytestr"]],["bytes"]]],[11,"raw_schema","","",1,[[],["defaultschemaraw"]]],[11,"update_parameter","","",18,[[["operation"]]]],[11,"update_parameter","","",0,[[["operation"]]]],[11,"update_definitions","","",0,[[["btreemap"]]]],[11,"update_parameter","","",1,[[["operation"]]]],[11,"update_response","","",1,[[["operation"]]]],[11,"update_parameter","","",18,[[["operation"]]]],[11,"update_definitions","","",18,[[["btreemap"]]]],[11,"update_parameter","","",18,[[["operation"]]]],[11,"update_parameter","","",18,[[["operation"]]]],[11,"update_parameter","","",18,[[["operation"]]]],[11,"update_parameter","","",18,[[["operation"]]]],[11,"update_parameter","","",3,[[["operation"]]]],[11,"update_definitions","","",3,[[["btreemap"]]]],[11,"path","","",4,[[["self"]],["str"]]],[11,"operations","","",4,[[["self"]],[["defaultoperationraw"],["httpmethod"],["btreemap",["httpmethod","defaultoperationraw"]]]]],[11,"definitions","","",4,[[["self"]],[["btreemap",["string","defaultschemaraw"]],["defaultschemaraw"],["string"]]]],[11,"security_definitions","","",4,[[["self"]],[["string"],["securityscheme"],["btreemap",["string","securityscheme"]]]]],[11,"path","","",5,[[["self"]],["str"]]],[11,"operations","","",5,[[["self"]],[["defaultoperationraw"],["httpmethod"],["btreemap",["httpmethod","defaultoperationraw"]]]]],[11,"security_definitions","","",5,[[["self"]],[["string"],["securityscheme"],["btreemap",["string","securityscheme"]]]]],[11,"definitions","","",5,[[["self"]],[["btreemap",["string","defaultschemaraw"]],["defaultschemaraw"],["string"]]]],[11,"update_operations","","",5,[[["btreemap"],["self"]]]],[11,"path","","",7,[[["self"]],["str"]]],[11,"operations","","",7,[[["self"]],[["defaultoperationraw"],["httpmethod"],["btreemap",["httpmethod","defaultoperationraw"]]]]],[11,"security_definitions","","",7,[[["self"]],[["string"],["securityscheme"],["btreemap",["string","securityscheme"]]]]],[11,"definitions","","",7,[[["self"]],[["btreemap",["string","defaultschemaraw"]],["defaultschemaraw"],["string"]]]],[11,"update_operations","","",7,[[["btreemap"],["self"]]]],[11,"from","","",7,[[["serviceconfig"]],["self"]]],[11,"new_service","","",6,[[["self"]]]],[11,"into_factory","","",4,[[],["t"]]],[11,"register","","",4,[[["appservice"]]]],[11,"register","","",5,[[["appservice"]]]],[11,"new","","Creates a new empty `Bytes`.",11,[[],["bytes"]]],[11,"from_static","","Creates a new `Bytes` from a static slice.",11,[[],["bytes"]]],[11,"len","","Returns the number of bytes contained in this `Bytes`.",11,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `Bytes` has a length of 0.",11,[[["self"]],["bool"]]],[11,"copy_from_slice","","Creates `Bytes` instance from slice, by copying it.",11,[[],["bytes"]]],[11,"slice","","Returns a slice of self for the provided range.",11,[[["self"]],["bytes"]]],[11,"slice_ref","","Returns a slice of self that is equivalent to the given…",11,[[["self"]],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",11,[[["self"],["usize"]],["bytes"]]],[11,"split_to","","Splits the bytes into two at the given index.",11,[[["self"],["usize"]],["bytes"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",11,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",11,[[["self"]]]],[11,"with_capacity","","Creates a new `BytesMut` with the specified capacity.",12,[[["usize"]],["bytesmut"]]],[11,"new","","Creates a new `BytesMut` with default capacity.",12,[[],["bytesmut"]]],[11,"len","","Returns the number of bytes contained in this `BytesMut`.",12,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the `BytesMut` has a length of 0.",12,[[["self"]],["bool"]]],[11,"capacity","","Returns the number of bytes the `BytesMut` can hold…",12,[[["self"]],["usize"]]],[11,"freeze","","Converts `self` into an immutable `Bytes`.",12,[[],["bytes"]]],[11,"split_off","","Splits the bytes into two at the given index.",12,[[["self"],["usize"]],["bytesmut"]]],[11,"split","","Removes the bytes from the current view, returning them in…",12,[[["self"]],["bytesmut"]]],[11,"split_to","","Splits the buffer into two at the given index.",12,[[["self"],["usize"]],["bytesmut"]]],[11,"truncate","","Shortens the buffer, keeping the first `len` bytes and…",12,[[["self"],["usize"]]]],[11,"clear","","Clears the buffer, removing all data.",12,[[["self"]]]],[11,"resize","","Resizes the buffer so that `len` is equal to `new_len`.",12,[[["self"],["usize"],["u8"]]]],[11,"set_len","","Sets the length of the buffer.",12,[[["self"],["usize"]]]],[11,"reserve","","Reserves capacity for at least `additional` more bytes to…",12,[[["self"],["usize"]]]],[11,"extend_from_slice","","Appends given bytes to this `BytesMut`.",12,[[["self"]]]],[11,"unsplit","","Absorbs a `BytesMut` that was previously split off.",12,[[["self"],["bytesmut"]]]],[11,"new","","Create new `Data` instance.",13,[[["t"]],["data"]]],[11,"get_ref","","Get reference to inner app data.",13,[[["self"]],["t"]]],[11,"into_inner","","Convert to the internal Arc",13,[[],["arc"]]],[11,"into_inner","","Deconstruct to an inner value",0,[[],["t"]]],[11,"limit","","Change max size of payload. By default max size is 16Kb",14,[[["usize"]],["formconfig"]]],[11,"error_handler","","Set custom error handler",14,[[["f"]],["formconfig"]]],[11,"head","","This method returns reference to the request head",15,[[["self"]],["requesthead"]]],[11,"uri","","Request's uri.",15,[[["self"]],["uri"]]],[11,"method","","Read the Request method.",15,[[["self"]],["method"]]],[11,"version","","Read the Request Version.",15,[[["self"]],["version"]]],[11,"headers","","Returns request's headers.",15,[[["self"]],["headermap"]]],[11,"path","","The target path of this Request.",15,[[["self"]],["str"]]],[11,"query_string","","The query string in the URL.",15,[[["self"]],["str"]]],[11,"match_info","","Get a reference to the Path parameters.",15,[[["self"]],["path"]]],[11,"extensions","","Request extensions",15,[[["self"]],[["ref",["extensions"]],["extensions"]]]],[11,"extensions_mut","","Mutable reference to a the request's extensions",15,[[["self"]],[["extensions"],["refmut",["extensions"]]]]],[11,"url_for","","Generate url for named resource",15,[[["str"],["u"],["self"]],[["urlgenerationerror"],["url"],["result",["url","urlgenerationerror"]]]]],[11,"url_for_static","","Generate url for named resource",15,[[["str"],["self"]],[["urlgenerationerror"],["url"],["result",["url","urlgenerationerror"]]]]],[11,"resource_map","","Get a reference to a `ResourceMap` of current application.",15,[[["self"]],["resourcemap"]]],[11,"peer_addr","","Peer socket address",15,[[["self"]],[["option",["socketaddr"]],["socketaddr"]]]],[11,"connection_info","","Get ConnectionInfo for the current request.",15,[[["self"]],[["ref",["connectioninfo"]],["connectioninfo"]]]],[11,"app_config","","App config",15,[[["self"]],["appconfig"]]],[11,"app_data","","Get an application data stored with `App::extension()`…",15,[[["self"]],[["option"],["t"]]]],[11,"Ok","","",16,[[],["responsebuilder"]]],[11,"Created","","",16,[[],["responsebuilder"]]],[11,"Accepted","","",16,[[],["responsebuilder"]]],[11,"NonAuthoritativeInformation","","",16,[[],["responsebuilder"]]],[11,"NoContent","","",16,[[],["responsebuilder"]]],[11,"ResetContent","","",16,[[],["responsebuilder"]]],[11,"PartialContent","","",16,[[],["responsebuilder"]]],[11,"MultiStatus","","",16,[[],["responsebuilder"]]],[11,"AlreadyReported","","",16,[[],["responsebuilder"]]],[11,"MultipleChoices","","",16,[[],["responsebuilder"]]],[11,"MovedPermanently","","",16,[[],["responsebuilder"]]],[11,"Found","","",16,[[],["responsebuilder"]]],[11,"SeeOther","","",16,[[],["responsebuilder"]]],[11,"NotModified","","",16,[[],["responsebuilder"]]],[11,"UseProxy","","",16,[[],["responsebuilder"]]],[11,"TemporaryRedirect","","",16,[[],["responsebuilder"]]],[11,"PermanentRedirect","","",16,[[],["responsebuilder"]]],[11,"BadRequest","","",16,[[],["responsebuilder"]]],[11,"NotFound","","",16,[[],["responsebuilder"]]],[11,"Unauthorized","","",16,[[],["responsebuilder"]]],[11,"PaymentRequired","","",16,[[],["responsebuilder"]]],[11,"Forbidden","","",16,[[],["responsebuilder"]]],[11,"MethodNotAllowed","","",16,[[],["responsebuilder"]]],[11,"NotAcceptable","","",16,[[],["responsebuilder"]]],[11,"ProxyAuthenticationRequired","","",16,[[],["responsebuilder"]]],[11,"RequestTimeout","","",16,[[],["responsebuilder"]]],[11,"Conflict","","",16,[[],["responsebuilder"]]],[11,"Gone","","",16,[[],["responsebuilder"]]],[11,"LengthRequired","","",16,[[],["responsebuilder"]]],[11,"PreconditionFailed","","",16,[[],["responsebuilder"]]],[11,"PreconditionRequired","","",16,[[],["responsebuilder"]]],[11,"PayloadTooLarge","","",16,[[],["responsebuilder"]]],[11,"UriTooLong","","",16,[[],["responsebuilder"]]],[11,"UnsupportedMediaType","","",16,[[],["responsebuilder"]]],[11,"RangeNotSatisfiable","","",16,[[],["responsebuilder"]]],[11,"ExpectationFailed","","",16,[[],["responsebuilder"]]],[11,"UnprocessableEntity","","",16,[[],["responsebuilder"]]],[11,"TooManyRequests","","",16,[[],["responsebuilder"]]],[11,"InternalServerError","","",16,[[],["responsebuilder"]]],[11,"NotImplemented","","",16,[[],["responsebuilder"]]],[11,"BadGateway","","",16,[[],["responsebuilder"]]],[11,"ServiceUnavailable","","",16,[[],["responsebuilder"]]],[11,"GatewayTimeout","","",16,[[],["responsebuilder"]]],[11,"VersionNotSupported","","",16,[[],["responsebuilder"]]],[11,"VariantAlsoNegotiates","","",16,[[],["responsebuilder"]]],[11,"InsufficientStorage","","",16,[[],["responsebuilder"]]],[11,"LoopDetected","","",16,[[],["responsebuilder"]]],[11,"build","","Create http response builder with specific status.",16,[[["statuscode"]],["responsebuilder"]]],[11,"build_from","","Create http response builder",16,[[["t"]],["responsebuilder"]]],[11,"new","","Constructs a response",16,[[["statuscode"]],[["body"],["response",["body"]]]]],[11,"from_error","","Constructs an error response",16,[[["error"]],[["body"],["response",["body"]]]]],[11,"into_body","","Convert response to response with body",16,[[],["response"]]],[11,"with_body","","Constructs a response with body",16,[[["statuscode"],["b"]],["response"]]],[11,"head","","Http message part of the response",16,[[["self"]],["responsehead"]]],[11,"head_mut","","Mutable reference to a http message part of the response",16,[[["self"]],["responsehead"]]],[11,"error","","The source `error` for this response",16,[[["self"]],[["option",["error"]],["error"]]]],[11,"status","","Get the response status code",16,[[["self"]],["statuscode"]]],[11,"status_mut","","Set the `StatusCode` for this response",16,[[["self"]],["statuscode"]]],[11,"headers","","Get the headers from the response",16,[[["self"]],["headermap"]]],[11,"headers_mut","","Get a mutable reference to the headers",16,[[["self"]],["headermap"]]],[11,"cookies","","Get an iterator for the cookies set by this response",16,[[["self"]],["cookieiter"]]],[11,"add_cookie","","Add a cookie to this response",16,[[["self"],["cookie"]],[["error"],["result",["error"]]]]],[11,"del_cookie","","Remove all cookies with the given name from this response.…",16,[[["str"],["self"]],["usize"]]],[11,"upgrade","","Connection upgrade status",16,[[["self"]],["bool"]]],[11,"keep_alive","","Keep-alive status for this connection",16,[[["self"]],["bool"]]],[11,"extensions","","Responses extensions",16,[[["self"]],[["ref",["extensions"]],["extensions"]]]],[11,"extensions_mut","","Mutable reference to a the response's extensions",16,[[["self"]],[["extensions"],["refmut",["extensions"]]]]],[11,"body","","Get body of this response",16,[[["self"]],["responsebody"]]],[11,"set_body","","Set a body",16,[[["b2"]],["response"]]],[11,"into_parts","","Split response and body",16,[[]]],[11,"drop_body","","Drop request's body",16,[[],["response"]]],[11,"map_body","","Set a body and return previous body value",16,[[["f"]],["response"]]],[11,"take_body","","Extract response body",16,[[["self"]],["responsebody"]]],[11,"into_inner","","Deconstruct to an inner value",1,[[],["t"]]],[11,"limit","","Change max size of payload. By default max size is 32Kb",17,[[["usize"]],["jsonconfig"]]],[11,"error_handler","","Set custom error handler",17,[[["f"]],["jsonconfig"]]],[11,"content_type","","Set predicate for allowed content types",17,[[["f"]],["jsonconfig"]]],[11,"into_inner","","Deconstruct to an inner value",18,[[],["t"]]],[11,"error_handler","","Set custom error handler",19,[[["f"]],["pathconfig"]]],[11,"into_inner","","Deconstruct to a inner value",2,[[],[["payload",["pin"]],["pin",["box"]]]]],[11,"new","","Create `PayloadConfig` instance and set max size of payload.",20,[[["usize"]],["payloadconfig"]]],[11,"limit","","Change max size of payload. By default max size is 256Kb",20,[[["usize"]],["payloadconfig"]]],[11,"mimetype","","Set required mime-type of the request. By default mime…",20,[[["mime"]],["payloadconfig"]]],[11,"into_inner","","Deconstruct to a inner value",3,[[],["t"]]],[11,"from_query","","Get query parameters from the path",3,[[["str"]],[["querypayloaderror"],["query"],["result",["query","querypayloaderror"]]]]],[11,"error_handler","","Set custom error handler",21,[[["f"]],["queryconfig"]]]],"p":[[3,"Form"],[3,"Json"],[3,"Payload"],[3,"Query"],[3,"Resource"],[3,"Scope"],[3,"Route"],[3,"ServiceConfig"],[8,"OpenApiExt"],[8,"Mountable"],[3,"App"],[3,"Bytes"],[3,"BytesMut"],[3,"Data"],[3,"FormConfig"],[3,"HttpRequest"],[3,"HttpResponse"],[3,"JsonConfig"],[3,"Path"],[3,"PathConfig"],[3,"PayloadConfig"],[3,"QueryConfig"]]};
searchIndex["paperclip_core"] = {"doc":"Core structs and traits for paperclip.","i":[[4,"ValidationError","paperclip_core","Errors related to spec validation.",null,null],[13,"InvalidRefURI","","Failed to resolve the schema because an invalid URI was…",0,null],[13,"MissingReference","","The specified reference is missing in the spec.",0,null],[13,"MissingSchemaForBodyParameter","","If a parameter specifies body, then schema must be…",0,null],[13,"InvalidHeader","","Some headers have special meaning in OpenAPI. The user…",0,null],[13,"InvalidParameterType","","Only arrays and primitive types are allowed in parameters.",0,null],[0,"im","","Interior mutability stuff.",null,null],[3,"RcRefCell","paperclip_core::im","Wrapper over `Rc<RefCell<T>>` to offer deserialization…",null,null],[3,"ArcRwLock","","Wrapper over `Arc<RwLock<T>>` to offer deserialization…",null,null],[0,"v2","paperclip_core","Core types and traits associated with the OpenAPI v2…",null,null],[23,"api_v2_schema_struct","paperclip_core::v2","Converts your struct to support deserializing from an…",null,null],[23,"api_v2_operation","","Marker attribute for indicating that a function is an…",null,null],[24,"Apiv2Schema","","Derive attribute for indicating that a type is an OpenAPI…",null,null],[24,"Apiv2Security","","Marker attribute for indicating that an object forbids…",null,null],[23,"api_v2_errors","","Marker attribute for indicating that the marked object can…",null,null],[3,"ResponderWrapper","","Wrapper for wrapping over `impl Responder` thingies (to…",null,null],[12,"0","","",1,null],[0,"models","","Models used by OpenAPI v2.",null,null],[3,"Coder","paperclip_core::v2::models","Represents the en/decoder for some MIME media range.",null,null],[12,"encoder_path","","Path to the encoding function.",2,null],[12,"decoder_path","","Path to the decoding function.",2,null],[12,"error_path","","Path to the error type.",2,null],[12,"any_value","","Path to the struct/enum that represents `Any` (such as…",2,null],[12,"prefer","","Whether this media type should be preferred when multiple…",2,null],[12,"builtin","","Whether this en/decoder is built-in.",2,null],[3,"Coders","","`x-coder` global extension for custom encoders and decoders.",null,null],[3,"MediaRange","","Wrapper for `mime::MediaRange` to support `BTree{Set, Map}`.",null,null],[12,"0","","",3,null],[3,"JSON_CODER","","Default coder for JSON.",null,null],[3,"JSON_MIME","","Media range for JSON.",null,null],[3,"YAML_CODER","","Default coder for YAML.",null,null],[3,"YAML_MIME","","Media range for YAML.",null,null],[3,"Api","","OpenAPI v2 (swagger) spec generic over parameter and schema.",null,null],[12,"swagger","","",4,null],[12,"definitions","","",4,null],[12,"paths","","",4,null],[12,"host","","",4,null],[12,"base_path","","",4,null],[12,"consumes","","",4,null],[12,"produces","","",4,null],[12,"schemes","","",4,null],[12,"parameters","","",4,null],[12,"responses","","",4,null],[12,"security_definitions","","",4,null],[12,"security","","",4,null],[12,"tags","","",4,null],[12,"external_docs","","",4,null],[12,"coders","","",4,null],[12,"support_crates","","Additional crates that need to be added to the manifest.",4,null],[12,"spec_format","","This field is set manually, because we don't know the…",4,null],[12,"info","","",4,null],[3,"DefaultSchemaRaw","","Raw version of schema.",null,null],[12,"reference","","",5,null],[12,"title","","",5,null],[12,"description","","",5,null],[12,"data_type","","",5,null],[12,"format","","",5,null],[12,"properties","","",5,null],[12,"items","","",5,null],[12,"enum_","","",5,null],[12,"extra_props","","",5,null],[12,"required","","",5,null],[3,"DefaultSchema","","Default schema if your schema doesn't have any custom…",null,null],[12,"reference","","",6,null],[12,"title","","",6,null],[12,"description","","",6,null],[12,"data_type","","",6,null],[12,"format","","",6,null],[12,"properties","","",6,null],[12,"items","","",6,null],[12,"enum_","","",6,null],[12,"extra_props","","",6,null],[12,"required","","",6,null],[3,"Info","","Info object.",null,null],[12,"version","","",7,null],[12,"title","","",7,null],[12,"description","","",7,null],[12,"contact","","",7,null],[12,"license","","",7,null],[3,"Contact","","Contact object.",null,null],[12,"name","","",8,null],[12,"url","","",8,null],[12,"email","","",8,null],[3,"License","","License object.",null,null],[12,"name","","",9,null],[12,"url","","",9,null],[3,"SecurityScheme","","Security Scheme object.",null,null],[12,"name","","",10,null],[12,"type_","","",10,null],[12,"in_","","",10,null],[12,"flow","","",10,null],[12,"auth_url","","",10,null],[12,"token_url","","",10,null],[12,"scopes","","",10,null],[12,"description","","",10,null],[3,"Tag","","Tag object.",null,null],[12,"name","","",11,null],[12,"description","","",11,null],[12,"external_docs","","",11,null],[3,"ExternalDocs","","External Documentation object.",null,null],[12,"description","","",12,null],[12,"url","","",12,null],[3,"PathItem","","Path item object.",null,null],[12,"methods","","",13,null],[12,"parameters","","",13,null],[3,"Parameter","","Request parameter object.",null,null],[12,"description","","",14,null],[12,"in_","","",14,null],[12,"name","","",14,null],[12,"required","","",14,null],[12,"schema","","",14,null],[12,"data_type","","",14,null],[12,"format","","",14,null],[12,"items","","",14,null],[12,"collection_format","","",14,null],[12,"allow_empty_value","","",14,null],[12,"default","","",14,null],[12,"maximum","","",14,null],[12,"exclusive_maximum","","",14,null],[12,"minimum","","",14,null],[12,"exclusive_minimum","","",14,null],[12,"max_length","","",14,null],[12,"min_length","","",14,null],[12,"pattern","","",14,null],[12,"max_items","","",14,null],[12,"min_items","","",14,null],[12,"unique_items","","",14,null],[12,"multiple_of","","",14,null],[12,"enum_","","",14,null],[3,"Items","","Items object.",null,null],[12,"data_type","","",15,null],[12,"format","","",15,null],[12,"items","","",15,null],[12,"collection_format","","",15,null],[12,"enum_","","",15,null],[12,"maximum","","",15,null],[12,"exclusive_maximum","","",15,null],[12,"minimum","","",15,null],[12,"exclusive_minimum","","",15,null],[12,"max_length","","",15,null],[12,"min_length","","",15,null],[12,"pattern","","",15,null],[12,"max_items","","",15,null],[12,"min_items","","",15,null],[12,"unique_items","","",15,null],[12,"multiple_of","","",15,null],[3,"Operation","","Operation object.",null,null],[12,"operation_id","","",16,null],[12,"description","","",16,null],[12,"consumes","","",16,null],[12,"produces","","",16,null],[12,"security","","",16,null],[12,"schemes","","",16,null],[12,"responses","","",16,null],[12,"parameters","","",16,null],[12,"deprecated","","",16,null],[3,"Reference","","Reference object.",null,null],[12,"reference","","",17,null],[3,"Response","","Response object.",null,null],[12,"description","","",18,null],[12,"schema","","",18,null],[12,"headers","","",18,null],[3,"Header","","Header object.",null,null],[12,"description","","",19,null],[12,"data_type","","",19,null],[12,"format","","",19,null],[12,"items","","",19,null],[12,"collection_format","","",19,null],[12,"default","","",19,null],[12,"enum_","","",19,null],[12,"maximum","","",19,null],[12,"exclusive_maximum","","",19,null],[12,"minimum","","",19,null],[12,"exclusive_minimum","","",19,null],[12,"max_length","","",19,null],[12,"min_length","","",19,null],[12,"pattern","","",19,null],[12,"max_items","","",19,null],[12,"min_items","","",19,null],[12,"unique_items","","",19,null],[12,"multiple_of","","",19,null],[4,"Version","","OpenAPI version.",null,null],[13,"V2","","",20,null],[4,"DataType","","Supported data types.",null,null],[13,"Integer","","",21,null],[13,"Number","","",21,null],[13,"String","","",21,null],[13,"Boolean","","",21,null],[13,"Array","","",21,null],[13,"Object","","",21,null],[13,"File","","",21,null],[4,"DataTypeFormat","","Supported data type formats.",null,null],[13,"Int32","","",22,null],[13,"Int64","","",22,null],[13,"Float","","",22,null],[13,"Double","","",22,null],[13,"Byte","","",22,null],[13,"Binary","","",22,null],[13,"Date","","",22,null],[13,"DateTime","","",22,null],[13,"Password","","",22,null],[13,"Uuid","","",22,null],[13,"Other","","",22,null],[4,"SpecFormat","","The format used by spec (JSON/YAML).",null,null],[13,"Json","","",23,null],[13,"Yaml","","",23,null],[4,"ParameterIn","","The location of the parameter.",null,null],[13,"Query","","",24,null],[13,"Header","","",24,null],[13,"Path","","",24,null],[13,"FormData","","",24,null],[13,"Body","","",24,null],[4,"CollectionFormat","","Possible formats for array values in parameter.",null,null],[13,"Csv","","",25,null],[13,"Ssv","","",25,null],[13,"Tsv","","",25,null],[13,"Pipes","","",25,null],[13,"Multi","","",25,null],[4,"OperationProtocol","","The protocol used for an operation.",null,null],[13,"Http","","",26,null],[13,"Https","","",26,null],[13,"Ws","","",26,null],[13,"Wss","","",26,null],[4,"HttpMethod","","The HTTP method used for an operation.",null,null],[13,"Get","","",27,null],[13,"Put","","",27,null],[13,"Post","","",27,null],[13,"Delete","","",27,null],[13,"Options","","",27,null],[13,"Head","","",27,null],[13,"Patch","","",27,null],[4,"Either","","`Either` from \"either\" crate. We can't use that crate…",null,null],[13,"Left","","",28,null],[13,"Right","","",28,null],[4,"Resolvable","","Wrapper for schema. This uses `Arc<RwLock<S>>` for…",null,null],[13,"Raw","","",29,null],[13,"Resolved","","",29,null],[12,"new","paperclip_core::v2::models::Resolvable","",30,null],[12,"old","","",30,null],[6,"ResolvableApi","paperclip_core::v2::models","OpenAPI v2 spec which can be traversed and resolved for…",null,null],[6,"DefaultApiRaw","","OpenAPI v2 spec with defaults.",null,null],[6,"ResolvablePathItem","","Path item that can be traversed and resolved for codegen.",null,null],[6,"DefaultPathItemRaw","","Path item with default parameter and response.",null,null],[6,"ResolvableParameter","","Parameter that can be traversed and resolved for codegen.",null,null],[6,"DefaultParameterRaw","","Parameter with the default raw schema.",null,null],[6,"ResolvableOperation","","Operation that can be traversed and resolved for codegen.",null,null],[6,"DefaultOperationRaw","","Operation with default raw parameter and response.",null,null],[6,"ResolvableResponse","","Response that can be traversed and resolved for codegen.",null,null],[6,"DefaultResponseRaw","","Response with the default raw schema.",null,null],[11,"is_primitive","","Checks if this is a primitive type.",21,[[],["bool"]]],[11,"coder","","The en/decoder used for this format.",23,[[],[["coder"],["arc",["coder"]]]]],[11,"mime","","The mime for this format.",23,[[],["mediarange"]]],[11,"path_parameters_map","","Gets the parameters from the given path template and calls…",4,[[["str"]],[["str"],["cow",["str"]]]]],[11,"remove_refs","","Recursively removes all `$ref` values in this schema.",5,[[["self"]]]],[11,"retain_ref","","Recursively removes all properties other than `$ref` value…",5,[[["self"]]]],[11,"update_definitions","","Adds or updates this definition to the map of security…",10,[[["str"],["btreemap"]]]],[11,"append_map","","Appends one map to the other whilst merging individual…",10,[[["string"],["btreemap"],["securityscheme"],["btreemap",["string","securityscheme"]]]]],[11,"normalize","","Normalizes this operation map. - Collects and removes…",13,[[["self"]]]],[11,"check","","Checks the validity of this parameter using the relative…",14,[[["str"],["self"]],[["result",["validationerror"]],["validationerror"]]]],[11,"set_parameter_names_from_path_template","","Overwrites the names of parameters in this operation using…",16,[[["str"],["self"]]]],[11,"allows_body","","Whether this method allows body in requests.",27,[[],["bool"]]],[11,"right","","Get a readable reference to the right variant (if it…",28,[[["self"]],[["option"],["r"]]]],[11,"right_mut","","Get a mutable reference to the right variant (if it exists).",28,[[["self"]],[["option"],["r"]]]],[11,"left","","Get a readable reference to the left variant (if it exists).",28,[[["self"]],[["option"],["l"]]]],[11,"left_mut","","Get a mutable reference to the left variant (if it exists).",28,[[["self"]],[["option"],["l"]]]],[11,"get_description","","Fetch the description for this schema.",29,[[["self"]],[["option",["string"]],["string"]]]],[0,"schema","paperclip_core::v2","Traits used for code and spec generation.",null,null],[8,"Schema","paperclip_core::v2::schema","Interface for the `Schema` object.",null,null],[10,"description","","Description for this schema, if any (`description` field).",31,[[["self"]],[["str"],["option",["str"]]]]],[10,"reference","","Reference to some other schema, if any (`$ref` field).",31,[[["self"]],[["str"],["option",["str"]]]]],[10,"data_type","","Data type of this schema, if any (`type` field).",31,[[["self"]],[["datatype"],["option",["datatype"]]]]],[10,"format","","Data type format used by this schema, if any (`format`…",31,[[["self"]],[["option",["datatypeformat"]],["datatypeformat"]]]],[10,"items","","Schema for array definitions, if any (`items` field).",31,[[["self"]],[["resolvable"],["option",["resolvable"]]]]],[10,"items_mut","","Mutable access to the `items` field, if it exists.",31,[[["self"]],[["option",["resolvable"]],["resolvable"]]]],[10,"additional_properties","","Value schema for maps (`additional_properties` field).",31,[[["self"]],[["either"],["option",["either"]]]]],[10,"additional_properties_mut","","Mutable access to `additional_properties` field, if it's a…",31,[[["self"]],[["either"],["option",["either"]]]]],[10,"properties","","Map of names and schema for properties, if it's an object…",31,[[["self"]],[["btreemap"],["option",["btreemap"]]]]],[10,"properties_mut","","Mutable access to `properties` field.",31,[[["self"]],[["option",["btreemap"]],["btreemap"]]]],[10,"required_properties","","Returns the required properties (if any) for this object.",31,[[["self"]],[["btreeset"],["option",["btreeset"]]]]],[10,"enum_variants","","Enum variants in this schema (if any). It's…",31,[[["self"]],["option"]]],[11,"contains_any","","Returns whether this definition \"is\" or \"has\" `Any` type.",31,[[["self"]],["bool"]]],[10,"set_reference","","Set the reference to this schema.",31,[[["self"],["string"]]]],[10,"set_cyclic","","Set whether this definition is cyclic. This is done by the…",31,[[["self"],["bool"]]]],[10,"is_cyclic","","Returns whether this definition is cyclic.",31,[[["self"]],["bool"]]],[10,"name","","Name of this schema, if any.",31,[[["self"]],[["str"],["option",["str"]]]]],[10,"set_name","","Sets the name for this schema. This is done by the resolver.",31,[[["str"],["self"]]]],[8,"TypedData","","Trait for returning OpenAPI data type and format for the…",null,null],[11,"data_type","","The OpenAPI type for this implementor.",32,[[],["datatype"]]],[11,"format","","The optional OpenAPI data format for this implementor.",32,[[],[["option",["datatypeformat"]],["datatypeformat"]]]],[8,"Apiv2Schema","","Represents a OpenAPI v2 schema object convertible. This is…",null,null],[18,"NAME","","Name of this schema. This is the name to which the…",33,null],[18,"DESCRIPTION","","Description of this schema. In case the trait is derived,…",33,null],[11,"raw_schema","","Returns the raw schema for this object.",33,[[],["defaultschemaraw"]]],[11,"schema_with_ref","","Returns the schema with a reference (if this is an object).",33,[[],["defaultschemaraw"]]],[11,"security_scheme","","Returns the security scheme for this object.",33,[[],[["securityscheme"],["option",["securityscheme"]]]]],[8,"Apiv2Operation","","Represents a OpenAPI v2 operation convertible. This is…",null,null],[10,"operation","","Returns the definition for this operation.",34,[[],["defaultoperationraw"]]],[10,"security_definitions","","Returns a map of security definitions that will be merged…",34,[[],[["string"],["securityscheme"],["btreemap",["string","securityscheme"]]]]],[10,"definitions","","Returns the definitions used by this operation.",34,[[],[["btreemap",["string","defaultschemaraw"]],["defaultschemaraw"],["string"]]]],[8,"Apiv2Errors","","Represents a OpenAPI v2 error convertible. This is…",null,null],[18,"ERROR_MAP","","",35,null],[8,"OperationModifier","paperclip_core::v2","Actix-specific trait for indicating that this entity can…",null,null],[11,"update_parameter","","Update the parameters list in the given operation (if…",36,[[["defaultoperationraw"]]]],[11,"update_response","","Update the responses map in the given operation (if needed).",36,[[["defaultoperationraw"]]]],[11,"update_definitions","","Update the definitions map (if needed).",36,[[["btreemap"]]]],[11,"update_security","","Update the security map in the given operation (if needed).",36,[[["defaultoperationraw"]]]],[11,"update_security_definitions","","Update the security defition map (if needed).",36,[[["btreemap"]]]],[11,"resolve","paperclip_core::v2::models","Consumes this API schema, resolves the references and…",4,[[],[["resolvableapi"],["result",["resolvableapi","validationerror"]],["validationerror"]]]],[11,"resolve","paperclip_core::v2","Consumes this API schema, resolves the references and…",37,[[],[["resolvableapi"],["result",["resolvableapi","validationerror"]],["validationerror"]]]],[11,"from","paperclip_core","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"as_fail","","",0,[[["self"]],["fail"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","paperclip_core::im","",38,[[],["t"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"vzip","","",38,[[],["v"]]],[11,"from","","",39,[[],["t"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"vzip","","",39,[[],["v"]]],[11,"raw_schema","paperclip_core::v2","",1,[[],["defaultschemaraw"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","paperclip_core::v2::models","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"vzip","","",40,[[],["v"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"vzip","","",41,[[],["v"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"vzip","","",42,[[],["v"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"vzip","","",43,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"equivalent","","",3,[[["k"],["self"]],["bool"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"vzip","","",44,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"vzip","","",14,[[],["v"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"vzip","","",15,[[],["v"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"vzip","","",16,[[],["v"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"vzip","","",17,[[],["v"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"equivalent","","",20,[[["k"],["self"]],["bool"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"equivalent","","",21,[[["k"],["self"]],["bool"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"equivalent","","",22,[[["k"],["self"]],["bool"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"equivalent","","",23,[[["k"],["self"]],["bool"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"equivalent","","",24,[[["k"],["self"]],["bool"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"equivalent","","",25,[[["k"],["self"]],["bool"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"equivalent","","",26,[[["k"],["self"]],["bool"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"equivalent","","",27,[[["k"],["self"]],["bool"]]],[11,"vzip","","",27,[[],["v"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"load","","",28,[[["self"]]]],[11,"load","","",28,[[["self"]],["dynguard"]]],[11,"vzip","","",28,[[],["v"]]],[11,"from","","",29,[[],["t"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"vzip","","",29,[[],["v"]]],[11,"name","","",6,[[["self"]],[["str"],["option",["str"]]]]],[11,"set_name","","",6,[[["str"],["self"]]]],[11,"set_cyclic","","",6,[[["self"],["bool"]]]],[11,"is_cyclic","","",6,[[["self"]],["bool"]]],[11,"description","","",6,[[["self"]],[["str"],["option",["str"]]]]],[11,"reference","","",6,[[["self"]],[["str"],["option",["str"]]]]],[11,"set_reference","","",6,[[["self"],["string"]]]],[11,"data_type","","",6,[[["self"]],[["option",["datatype"]],["datatype"]]]],[11,"format","","",6,[[["self"]],[["option",["datatypeformat"]],["datatypeformat"]]]],[11,"items","","",6,[[["self"]],[["option",["resolvable"]],["resolvable"]]]],[11,"items_mut","","",6,[[["self"]],[["option",["resolvable"]],["resolvable"]]]],[11,"additional_properties","","",6,[[["self"]],[["either"],["option",["either"]]]]],[11,"additional_properties_mut","","",6,[[["self"]],[["either"],["option",["either"]]]]],[11,"properties","","",6,[[["self"]],[["option",["btreemap"]],["btreemap"]]]],[11,"properties_mut","","",6,[[["self"]],[["btreemap"],["option",["btreemap"]]]]],[11,"required_properties","","",6,[[["self"]],[["btreeset"],["option",["btreeset"]]]]],[11,"enum_variants","","",6,[[["self"]],["option"]]],[11,"from","paperclip_core::im","",38,[[["s"]],["self"]]],[11,"from","","",39,[[["s"]],["self"]]],[11,"from","paperclip_core::v2::models","",27,[[["method"]],["httpmethod"]]],[11,"from","","",29,[[["s"]],["self"]]],[11,"clone","paperclip_core::im","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","paperclip_core::v2::models","",3,[[["self"]],["mediarange"]]],[11,"clone","","",44,[[["self"]],["coders"]]],[11,"clone","","",2,[[["self"]],["coder"]]],[11,"clone","","",20,[[["self"]],["version"]]],[11,"clone","","",21,[[["self"]],["datatype"]]],[11,"clone","","",22,[[["self"]],["datatypeformat"]]],[11,"clone","","",4,[[["self"]],["api"]]],[11,"clone","","",23,[[["self"]],["specformat"]]],[11,"clone","","",5,[[["self"]],["defaultschemaraw"]]],[11,"clone","","",6,[[["self"]],["defaultschema"]]],[11,"clone","","",7,[[["self"]],["info"]]],[11,"clone","","",8,[[["self"]],["contact"]]],[11,"clone","","",9,[[["self"]],["license"]]],[11,"clone","","",10,[[["self"]],["securityscheme"]]],[11,"clone","","",11,[[["self"]],["tag"]]],[11,"clone","","",12,[[["self"]],["externaldocs"]]],[11,"clone","","",13,[[["self"]],["pathitem"]]],[11,"clone","","",14,[[["self"]],["parameter"]]],[11,"clone","","",15,[[["self"]],["items"]]],[11,"clone","","",24,[[["self"]],["parameterin"]]],[11,"clone","","",25,[[["self"]],["collectionformat"]]],[11,"clone","","",16,[[["self"]],["operation"]]],[11,"clone","","",17,[[["self"]],["reference"]]],[11,"clone","","",26,[[["self"]],["operationprotocol"]]],[11,"clone","","",18,[[["self"]],["response"]]],[11,"clone","","",19,[[["self"]],["header"]]],[11,"clone","","",27,[[["self"]],["httpmethod"]]],[11,"clone","","",28,[[["self"]],["either"]]],[11,"clone","","",29,[[["self"]],["self"]]],[11,"default","","",44,[[],["coders"]]],[11,"default","","",2,[[],["coder"]]],[11,"default","","",4,[[],["api"]]],[11,"default","","",6,[[],["self"]]],[11,"default","","",5,[[],["self"]]],[11,"default","","",7,[[],["info"]]],[11,"default","","",8,[[],["contact"]]],[11,"default","","",9,[[],["license"]]],[11,"default","","",10,[[],["securityscheme"]]],[11,"default","","",11,[[],["tag"]]],[11,"default","","",12,[[],["externaldocs"]]],[11,"default","","",13,[[],["pathitem"]]],[11,"default","","",14,[[],["parameter"]]],[11,"default","","",15,[[],["items"]]],[11,"default","","",16,[[],["operation"]]],[11,"default","","",17,[[],["reference"]]],[11,"default","","",18,[[],["response"]]],[11,"default","","",19,[[],["header"]]],[11,"default","","",23,[[],["self"]]],[11,"default","","",29,[[],["self"]]],[11,"default","","",20,[[],["self"]]],[11,"default","","",25,[[],["self"]]],[11,"default","","",24,[[],["self"]]],[11,"cmp","","",3,[[["self"],["mediarange"]],["ordering"]]],[11,"cmp","","",24,[[["self"],["parameterin"]],["ordering"]]],[11,"cmp","","",25,[[["self"],["collectionformat"]],["ordering"]]],[11,"cmp","","",26,[[["self"],["operationprotocol"]],["ordering"]]],[11,"cmp","","",27,[[["httpmethod"],["self"]],["ordering"]]],[11,"eq","","",3,[[["self"],["mediarange"]],["bool"]]],[11,"eq","","",20,[[["version"],["self"]],["bool"]]],[11,"eq","","",21,[[["datatype"],["self"]],["bool"]]],[11,"eq","","",22,[[["datatypeformat"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["specformat"]],["bool"]]],[11,"eq","","",14,[[["self"],["parameter"]],["bool"]]],[11,"ne","","",14,[[["self"],["parameter"]],["bool"]]],[11,"eq","","",15,[[["items"],["self"]],["bool"]]],[11,"ne","","",15,[[["items"],["self"]],["bool"]]],[11,"eq","","",24,[[["self"],["parameterin"]],["bool"]]],[11,"eq","","",25,[[["self"],["collectionformat"]],["bool"]]],[11,"eq","","",17,[[["reference"],["self"]],["bool"]]],[11,"ne","","",17,[[["reference"],["self"]],["bool"]]],[11,"eq","","",26,[[["self"],["operationprotocol"]],["bool"]]],[11,"eq","","",27,[[["httpmethod"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["mediarange"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",24,[[["self"],["parameterin"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",25,[[["self"],["collectionformat"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",26,[[["self"],["operationprotocol"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",27,[[["httpmethod"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"deref","paperclip_core::im","",38,[[["self"]]]],[11,"deref","","",39,[[["self"]]]],[11,"deref","paperclip_core::v2::models","",40,[[["self"]],["mediarange"]]],[11,"deref","","",41,[[["self"]],["arc"]]],[11,"deref","","",42,[[["self"]],["mediarange"]]],[11,"deref","","",43,[[["self"]],["arc"]]],[11,"deref","","",44,[[["self"]]]],[11,"deref","","",28,[[["self"]]]],[11,"deref","","",29,[[["self"]]]],[11,"deref_mut","paperclip_core::im","",38,[[["self"]]]],[11,"deref_mut","","",39,[[["self"]]]],[11,"deref_mut","paperclip_core::v2::models","",44,[[["self"]]]],[11,"deref_mut","","",28,[[["self"]]]],[11,"deref_mut","","",29,[[["self"]]]],[11,"fmt","paperclip_core","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","paperclip_core::im","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","paperclip_core::v2::models","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","paperclip_core","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","paperclip_core::v2::models","",27,[[["formatter"],["self"]],["result"]]],[11,"serialize","paperclip_core::im","",38,[[["s"],["self"]],["result"]]],[11,"serialize","","",39,[[["s"],["self"]],["result"]]],[11,"serialize","paperclip_core::v2::models","",29,[[["s"],["self"]],["result"]]],[11,"serialize","","",2,[[["self"],["__s"]],["result"]]],[11,"serialize","","",3,[[["s"],["self"]],["result"]]],[11,"serialize","","",44,[[["s"],["self"]],["result"]]],[11,"serialize","","",20,[[["self"],["__s"]],["result"]]],[11,"serialize","","",21,[[["self"],["__s"]],["result"]]],[11,"serialize","","",22,[[["self"],["__s"]],["result"]]],[11,"serialize","","",4,[[["self"],["__s"]],["result"]]],[11,"serialize","","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","","",6,[[["self"],["__s"]],["result"]]],[11,"serialize","","",7,[[["self"],["__s"]],["result"]]],[11,"serialize","","",8,[[["self"],["__s"]],["result"]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","","",14,[[["self"],["__s"]],["result"]]],[11,"serialize","","",15,[[["self"],["__s"]],["result"]]],[11,"serialize","","",24,[[["self"],["__s"]],["result"]]],[11,"serialize","","",25,[[["self"],["__s"]],["result"]]],[11,"serialize","","",16,[[["self"],["__s"]],["result"]]],[11,"serialize","","",17,[[["self"],["__s"]],["result"]]],[11,"serialize","","",26,[[["self"],["__s"]],["result"]]],[11,"serialize","","",18,[[["self"],["__s"]],["result"]]],[11,"serialize","","",19,[[["self"],["__s"]],["result"]]],[11,"serialize","","",27,[[["self"],["__s"]],["result"]]],[11,"serialize","","",28,[[["self"],["__s"]],["result"]]],[11,"deserialize","paperclip_core::im","",38,[[["d"]],["result"]]],[11,"deserialize","","",39,[[["d"]],["result"]]],[11,"deserialize","paperclip_core::v2::models","",2,[[["__d"]],["result"]]],[11,"deserialize","","",3,[[["d"]],["result"]]],[11,"deserialize","","",44,[[["d"]],["result"]]],[11,"deserialize","","",20,[[["__d"]],["result"]]],[11,"deserialize","","",21,[[["__d"]],["result"]]],[11,"deserialize","","",22,[[["__d"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]],[11,"deserialize","","",5,[[["__d"]],["result"]]],[11,"deserialize","","",6,[[["__d"]],["result"]]],[11,"deserialize","","",7,[[["__d"]],["result"]]],[11,"deserialize","","",8,[[["__d"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"deserialize","","",10,[[["__d"]],["result"]]],[11,"deserialize","","",11,[[["__d"]],["result"]]],[11,"deserialize","","",12,[[["__d"]],["result"]]],[11,"deserialize","","",13,[[["__d"]],["result"]]],[11,"deserialize","","",14,[[["__d"]],["result"]]],[11,"deserialize","","",15,[[["__d"]],["result"]]],[11,"deserialize","","",24,[[["__d"]],["result"]]],[11,"deserialize","","",25,[[["__d"]],["result"]]],[11,"deserialize","","",16,[[["__d"]],["result"]]],[11,"deserialize","","",17,[[["__d"]],["result"]]],[11,"deserialize","","",26,[[["__d"]],["result"]]],[11,"deserialize","","",18,[[["__d"]],["result"]]],[11,"deserialize","","",19,[[["__d"]],["result"]]],[11,"deserialize","","",27,[[["__d"]],["result"]]],[11,"deserialize","","",28,[[["__d"]],["result"]]],[11,"deserialize","","",29,[[["__d"]],["result"]]],[11,"name","paperclip_core","",0,[[["self"]],[["str"],["option",["str"]]]]],[11,"cause","","",0,[[["self"]],[["option",["fail"]],["fail"]]]],[11,"backtrace","","",0,[[["self"]],[["backtrace"],["option",["backtrace"]]]]],[11,"respond_to","paperclip_core::v2","",1,[[["httprequest"]]]],[11,"initialize","paperclip_core::v2::models","",40,[[["self"]]]],[11,"initialize","","",41,[[["self"]]]],[11,"initialize","","",42,[[["self"]]]],[11,"initialize","","",43,[[["self"]]]],[11,"update_parameter","paperclip_core::v2","Update the parameters list in the given operation (if…",36,[[["defaultoperationraw"]]]],[11,"update_response","","Update the responses map in the given operation (if needed).",36,[[["defaultoperationraw"]]]],[11,"update_definitions","","Update the definitions map (if needed).",36,[[["btreemap"]]]],[11,"update_security","","Update the security map in the given operation (if needed).",36,[[["defaultoperationraw"]]]],[11,"update_security_definitions","","Update the security defition map (if needed).",36,[[["btreemap"]]]],[11,"matching_coder","paperclip_core::v2::models","Returns the matching coder for the given media range (if…",44,[[["self"],["mediarange"]],[["option",["arc"]],["arc",["coder"]]]]]],"p":[[4,"ValidationError"],[3,"ResponderWrapper"],[3,"Coder"],[3,"MediaRange"],[3,"Api"],[3,"DefaultSchemaRaw"],[3,"DefaultSchema"],[3,"Info"],[3,"Contact"],[3,"License"],[3,"SecurityScheme"],[3,"Tag"],[3,"ExternalDocs"],[3,"PathItem"],[3,"Parameter"],[3,"Items"],[3,"Operation"],[3,"Reference"],[3,"Response"],[3,"Header"],[4,"Version"],[4,"DataType"],[4,"DataTypeFormat"],[4,"SpecFormat"],[4,"ParameterIn"],[4,"CollectionFormat"],[4,"OperationProtocol"],[4,"HttpMethod"],[4,"Either"],[4,"Resolvable"],[13,"Resolved"],[8,"Schema"],[8,"TypedData"],[8,"Apiv2Schema"],[8,"Apiv2Operation"],[8,"Apiv2Errors"],[8,"OperationModifier"],[6,"ResolvableApi"],[3,"RcRefCell"],[3,"ArcRwLock"],[3,"JSON_MIME"],[3,"JSON_CODER"],[3,"YAML_MIME"],[3,"YAML_CODER"],[3,"Coders"]]};
searchIndex["paperclip_macros"] = {"doc":"Convenience macros for paperclip.","i":[[23,"api_v2_schema_struct","paperclip_macros","Converts your struct to support deserializing from an…",null,null],[23,"api_v2_operation","","Marker attribute for indicating that a function is an…",null,null],[24,"Apiv2Schema","","Derive attribute for indicating that a type is an OpenAPI…",null,null],[24,"Apiv2Security","","Marker attribute for indicating that an object forbids…",null,null],[23,"api_v2_errors","","Marker attribute for indicating that the marked object can…",null,null]],"p":[]};
addSearchOptions(searchIndex);initSearch(searchIndex);